{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Planet.js\";\nimport React, { useState } from 'react';\nimport Canvas from './Canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Planet = ({\n  name,\n  star,\n  radius,\n  color,\n  velocity,\n  orbitRadius\n}) => {\n  const update = ctx => {\n    setTheta(theta + velocity);\n    setX(starX + orbitRadius * Math.cos(theta));\n    setY(starY + orbitRadius * Math.sin(theta));\n    draw(ctx);\n  };\n\n  const draw = (ctx, frameCount, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageHeight, stageHeight);\n    ctx.beginPath();\n    ctx.arc(stageWidth / 2, stageHeight / 2, 20 * Math.sin(frameCount * 0.05) ** 2, 0, Math.PI * 2);\n    ctx.fillStyle = 'white';\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    draw: draw,\n    type: \"dynamic\",\n    id: \"main\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Planet;\nexport default Planet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planet\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Planet.js"],"names":["React","useState","Canvas","Planet","name","star","radius","color","velocity","orbitRadius","update","ctx","setTheta","theta","setX","starX","Math","cos","setY","starY","sin","draw","frameCount","stageWidth","stageHeight","clearRect","beginPath","arc","PI","fillStyle","fill","closePath"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA,QAA5B;AAAsCC,EAAAA;AAAtC,CAAD,KAAwD;AACrE,QAAMC,MAAM,GAAGC,GAAG,IAAI;AACpBC,IAAAA,QAAQ,CAACC,KAAK,GAAGL,QAAT,CAAR;AAEAM,IAAAA,IAAI,CAACC,KAAK,GAAGN,WAAW,GAAGO,IAAI,CAACC,GAAL,CAASJ,KAAT,CAAvB,CAAJ;AACAK,IAAAA,IAAI,CAACC,KAAK,GAAGV,WAAW,GAAGO,IAAI,CAACI,GAAL,CAASP,KAAT,CAAvB,CAAJ;AAEAQ,IAAAA,IAAI,CAACV,GAAD,CAAJ;AACD,GAPD;;AASA,QAAMU,IAAI,GAAG,CAACV,GAAD,EAAMW,UAAN,EAAkBC,UAAlB,EAA8BC,WAA9B,KAA8C;AACzDb,IAAAA,GAAG,CAACc,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBD,WAApB,EAAiCA,WAAjC;AACAb,IAAAA,GAAG,CAACe,SAAJ;AACAf,IAAAA,GAAG,CAACgB,GAAJ,CAAQJ,UAAU,GAAC,CAAnB,EAAsBC,WAAW,GAAC,CAAlC,EAAqC,KAAKR,IAAI,CAACI,GAAL,CAASE,UAAU,GAAC,IAApB,KAA2B,CAArE,EAAwE,CAAxE,EAA2EN,IAAI,CAACY,EAAL,GAAU,CAArF;AACAjB,IAAAA,GAAG,CAACkB,SAAJ,GAAgB,OAAhB;AACAlB,IAAAA,GAAG,CAACmB,IAAJ;AACAnB,IAAAA,GAAG,CAACoB,SAAJ;AACD,GAPD;;AAQA,sBAAO,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEV,IAAd;AAAoB,IAAA,IAAI,EAAC,SAAzB;AAAmC,IAAA,EAAE,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnBD;;KAAMlB,M;AAqBN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport Canvas from './Canvas';\n\nconst Planet = ({name, star, radius, color, velocity, orbitRadius}) => {\n  const update = ctx => {\n    setTheta(theta + velocity);\n\n    setX(starX + orbitRadius * Math.cos(theta));\n    setY(starY + orbitRadius * Math.sin(theta));\n\n    draw(ctx);\n  }\n\n  const draw = (ctx, frameCount, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageHeight, stageHeight);\n    ctx.beginPath();\n    ctx.arc(stageWidth/2, stageHeight/2, 20 * Math.sin(frameCount*0.05)**2, 0, Math.PI * 2);\n    ctx.fillStyle = 'white';\n    ctx.fill();\n    ctx.closePath();\n  }\n  return <Canvas draw={draw} type='dynamic' id='main'/>\n}\n\nexport default Planet;"]},"metadata":{},"sourceType":"module"}