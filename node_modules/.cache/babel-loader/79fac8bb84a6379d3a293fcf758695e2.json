{"ast":null,"code":"const Planet = props => {\n  const {\n    name,\n    star,\n    radius,\n    color,\n    velocity,\n    orbitRadius\n  } = props;\n  let theta = Math.random() * Math.PI * 2;\n\n  const update = ctx => {\n    this.theta += this.velocity;\n    this.x = star.x + orbitRadius * Math.cos(theta);\n    this.y = star.y + orbitRadius * Math.sin(theta);\n    this.draw(ctx);\n  };\n\n  const draw = ctx => {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  };\n};\n\n_c = Planet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planet\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/SolarSystem.js"],"names":["Planet","props","name","star","radius","color","velocity","orbitRadius","theta","Math","random","PI","update","ctx","x","cos","y","sin","draw","beginPath","arc","fillStyle","fill","closePath"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA,QAA5B;AAAsCC,IAAAA;AAAtC,MAAqDN,KAA3D;AACA,MAAIO,KAAK,GAAGC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,EAArB,GAA0B,CAAtC;;AAEA,QAAMC,MAAM,GAAGC,GAAG,IAAI;AACpB,SAAKL,KAAL,IAAc,KAAKF,QAAnB;AAEA,SAAKQ,CAAL,GAASX,IAAI,CAACW,CAAL,GAASP,WAAW,GAAGE,IAAI,CAACM,GAAL,CAASP,KAAT,CAAhC;AACA,SAAKQ,CAAL,GAASb,IAAI,CAACa,CAAL,GAAST,WAAW,GAAGE,IAAI,CAACQ,GAAL,CAAST,KAAT,CAAhC;AAEA,SAAKU,IAAL,CAAUL,GAAV;AACD,GAPD;;AASA,QAAMK,IAAI,GAAGL,GAAG,IAAI;AAClBA,IAAAA,GAAG,CAACM,SAAJ;AACAN,IAAAA,GAAG,CAACO,GAAJ,CAAQ,KAAKN,CAAb,EAAgB,KAAKE,CAArB,EAAwB,KAAKZ,MAA7B,EAAqC,CAArC,EAAwCK,IAAI,CAACE,EAAL,GAAU,CAAlD,EAAqD,KAArD;AACAE,IAAAA,GAAG,CAACQ,SAAJ,GAAgB,KAAKhB,KAArB;AACAQ,IAAAA,GAAG,CAACS,IAAJ;AACAT,IAAAA,GAAG,CAACU,SAAJ;AACD,GAND;AAOD,CApBD;;KAAMvB,M","sourcesContent":["const Planet = props => {\n  const {name, star, radius, color, velocity, orbitRadius} = props;\n  let theta = Math.random() * Math.PI * 2;\n\n  const update = ctx => {\n    this.theta += this.velocity;\n\n    this.x = star.x + orbitRadius * Math.cos(theta);\n    this.y = star.y + orbitRadius * Math.sin(theta);\n\n    this.draw(ctx);\n  }\n\n  const draw = ctx => {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n}"]},"metadata":{},"sourceType":"module"}