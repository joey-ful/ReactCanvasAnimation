{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/contexts/ToggleContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useContext, createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialToggle = [{\n  id: 1,\n  name: 'background',\n  checked: false\n}, {\n  id: 2,\n  name: 'planet-art',\n  checked: false\n}, {\n  id: 3,\n  name: 'orbit-path',\n  checked: false\n}];\n\nfunction toggleReducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return state.map(toggle => toggle.name === action.name ? { ...toggle,\n        checked: !toggle.name.checked\n      } : toggle);\n    // case 'RADIO':\n    // return state.map(option =>\n    // (option.name === action.name) ? { 'no-drag': false, 'basic-drag': false, 'elastic-drag': false }\n    // );\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst ToggleStateContext = /*#__PURE__*/createContext();\nconst ToggleDispatchContext = /*#__PURE__*/createContext();\nexport function ToggleProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(toggleReducer, initialToggle);\n  return /*#__PURE__*/_jsxDEV(ToggleStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(ToggleDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToggleProvider, \"oNOp+puU3nSkviwUkKVBORZdAsc=\");\n\n_c = ToggleProvider;\nexport function useToggleState() {\n  _s2();\n\n  const context = useContext(ToggleStateContext);\n\n  if (!context) {\n    throw new Error('Cannot find ToggleProvider');\n  }\n\n  return context;\n}\n\n_s2(useToggleState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useToggleDispatch() {\n  _s3();\n\n  const context = useContext(ToggleDispatchContext);\n\n  if (!context) {\n    throw new Error('Cannot find CustomOptionProvider');\n  }\n\n  return context;\n}\n\n_s3(useToggleDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleProvider\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/contexts/ToggleContext.js"],"names":["useContext","createContext","useReducer","initialToggle","id","name","checked","toggleReducer","state","action","type","map","toggle","Error","ToggleStateContext","ToggleDispatchContext","ToggleProvider","children","dispatch","useToggleState","context","useToggleDispatch"],"mappings":";;;;;AAAA,SAAQA,UAAR,EAAoBC,aAApB,EAAmCC,UAAnC,QAAoD,OAApD;;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,OAAO,EAAE;AAHX,CADoB,EAMpB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,OAAO,EAAE;AAHX,CANoB,EAWpB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,OAAO,EAAE;AAHX,CAXoB,CAAtB;;AAkBA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAOF,KAAK,CAACG,GAAN,CAAWC,MAAD,IACfA,MAAM,CAACP,IAAP,KAAgBI,MAAM,CAACJ,IAAvB,GACI,EAAC,GAAGO,MAAJ;AAAYN,QAAAA,OAAO,EAAE,CAACM,MAAM,CAACP,IAAP,CAAYC;AAAlC,OADJ,GAEIM,MAHC,CAAP;AAKF;AACA;AACA;AACA;;AACA;AACE,YAAM,IAAIC,KAAJ,CAAW,0BAAyBJ,MAAM,CAACC,IAAK,EAAhD,CAAN;AAZJ;AAcD;;AAED,MAAMI,kBAAkB,gBAAGb,aAAa,EAAxC;AACA,MAAMc,qBAAqB,gBAAGd,aAAa,EAA3C;AAEA,OAAO,SAASe,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAAoC;AAAA;;AACzC,QAAM,CAACT,KAAD,EAAQU,QAAR,IAAoBhB,UAAU,CAACK,aAAD,EAAgBJ,aAAhB,CAApC;AAEA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEK,KAApC;AAAA,2BACE,QAAC,qBAAD,CAAuB,QAAvB;AAAgC,MAAA,KAAK,EAAEU,QAAvC;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAVeD,c;;KAAAA,c;AAYhB,OAAO,SAASG,cAAT,GAA0B;AAAA;;AAC/B,QAAMC,OAAO,GAAGpB,UAAU,CAACc,kBAAD,CAA1B;;AACA,MAAI,CAACM,OAAL,EAAc;AACZ,UAAM,IAAIP,KAAJ,CAAU,4BAAV,CAAN;AACD;;AACD,SAAOO,OAAP;AACD;;IANeD,c;;AAQhB,OAAO,SAASE,iBAAT,GAA6B;AAAA;;AAClC,QAAMD,OAAO,GAAGpB,UAAU,CAACe,qBAAD,CAA1B;;AACA,MAAI,CAACK,OAAL,EAAc;AACZ,UAAM,IAAIP,KAAJ,CAAU,kCAAV,CAAN;AACD;;AACD,SAAOO,OAAP;AACD;;IANeC,iB","sourcesContent":["import {useContext, createContext, useReducer} from 'react';\n\nconst initialToggle = [\n  {\n    id: 1,\n    name: 'background',\n    checked: false,\n  },\n  {\n    id: 2,\n    name: 'planet-art',\n    checked: false,\n  },\n  {\n    id: 3,\n    name: 'orbit-path',\n    checked: false,\n  },\n];\n\nfunction toggleReducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return state.map((toggle) =>\n        toggle.name === action.name\n          ? {...toggle, checked: !toggle.name.checked}\n          : toggle\n      );\n    // case 'RADIO':\n    // return state.map(option =>\n    // (option.name === action.name) ? { 'no-drag': false, 'basic-drag': false, 'elastic-drag': false }\n    // );\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst ToggleStateContext = createContext();\nconst ToggleDispatchContext = createContext();\n\nexport function ToggleProvider({children}) {\n  const [state, dispatch] = useReducer(toggleReducer, initialToggle);\n\n  return (\n    <ToggleStateContext.Provider value={state}>\n      <ToggleDispatchContext.Provider value={dispatch}>\n        {children}\n      </ToggleDispatchContext.Provider>\n    </ToggleStateContext.Provider>\n  );\n}\n\nexport function useToggleState() {\n  const context = useContext(ToggleStateContext);\n  if (!context) {\n    throw new Error('Cannot find ToggleProvider');\n  }\n  return context;\n}\n\nexport function useToggleDispatch() {\n  const context = useContext(ToggleDispatchContext);\n  if (!context) {\n    throw new Error('Cannot find CustomOptionProvider');\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}