{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Toggle.js\",\n    _s = $RefreshSig$();\n\nimport { useToggleDispatch } from './contexts/ToggleContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Toggle({\n  optionName,\n  checked\n}) {\n  _s();\n\n  const dispatch = useToggleDispatch();\n\n  const onToggle = optionName => {\n    dispatch({\n      type: 'TOGGLE',\n      optionName\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      htmlFor: \"optionName\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"optionName\",\n        checked: checked,\n        onChange: onToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: optionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Toggle, \"KKlUJXOKAjExzNjVl3GdrgBZSGg=\", false, function () {\n  return [useToggleDispatch];\n});\n\n_c = Toggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Toggle.js"],"names":["useToggleDispatch","Toggle","optionName","checked","dispatch","onToggle","type"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,6BAAlC;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAhB,EAAuC;AAAA;;AACpD,QAAMC,QAAQ,GAAGJ,iBAAiB,EAAlC;;AAEA,QAAMK,QAAQ,GAAIH,UAAD,IAAgB;AAC/BE,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,QADC;AAEPJ,MAAAA;AAFO,KAAD,CAAR;AAID,GALD;;AAOA,sBACE;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,OAAO,EAAC,YAAjC;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,EAAE,EAAC,YAA1B;AAAuC,QAAA,OAAO,EAAEC,OAAhD;AAAyD,QAAA,QAAQ,EAAEE;AAAnE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAwBH;AAAxB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAnBuBD,M;UACLD,iB;;;KADKC,M","sourcesContent":["import { useToggleDispatch } from './contexts/ToggleContext.js';\n\nexport default function Toggle({optionName, checked}) {\n  const dispatch = useToggleDispatch();\n\n  const onToggle = (optionName) => {\n    dispatch({\n      type: 'TOGGLE',\n      optionName,\n    })\n  }\n\n  return (\n    <li>\n      <label className=\"label\" htmlFor=\"optionName\" >\n        <input type=\"checkbox\" id=\"optionName\" checked={checked} onChange={onToggle}></input>\n        <span className=\"slider\"></span>\n        <span className=\"text\">{optionName}</span>\n      </label>\n    </li>\n  );\n}"]},"metadata":{},"sourceType":"module"}