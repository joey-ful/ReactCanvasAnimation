{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/src/App.js\";\nimport React from 'react';\nimport SolarSystem from './components/SolarSystem.js';\nimport Background from './components/Background.js';\nimport CustomizationMenu from './components/CustomizaztionMenu.js';\nimport { RadioProvider } from './contexts/RadioContext.js';\nimport { ToggleProvider } from './contexts/ToggleContext.js';\nimport { sunStar, planetInfo } from './consts/PlanetInfo.js';\nimport Planet from './js/Planet.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppProvider = ({\n  contexts,\n  children\n}) => contexts.reduce((prev, context) => /*#__PURE__*/React.createElement(context, {\n  children: prev\n}), children);\n\n_c = AppProvider;\n\nfunction App() {\n  let planets = [];\n  let sun;\n  let earth;\n\n  const createPlanet = (planet, star) => {\n    let planetInstance = new Planet(planet.name, star, planet.radius, planet.color, planet.velocity, planet.orbitRadius, planet.src);\n    planets.push(planetInstance);\n    return planetInstance;\n  };\n\n  for (let planet of planetInfo) {\n    if (planet.name === 'sun') {\n      let sun = createPlanet(planet, sunStar);\n    } else if (planet.name === 'earth') {\n      earth = createPlanet(planet, sun);\n    } else {\n      if (planet.star === 'sun') {\n        createPlanet(planet, sun);\n      } else {\n        createPlanet(planet, earth);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    contexts: [RadioProvider, ToggleProvider],\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SolarSystem, {\n      planets: planets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomizationMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppProvider\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/src/App.js"],"names":["React","SolarSystem","Background","CustomizationMenu","RadioProvider","ToggleProvider","sunStar","planetInfo","Planet","AppProvider","contexts","children","reduce","prev","context","createElement","App","planets","sun","earth","createPlanet","planet","star","planetInstance","name","radius","color","velocity","orbitRadius","src","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AACA,SAAQC,cAAR,QAA6B,6BAA7B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,wBAApC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAClBD,QAAQ,CAACE,MAAT,CACE,CAACC,IAAD,EAAOC,OAAP,kBACEd,KAAK,CAACe,aAAN,CAAoBD,OAApB,EAA6B;AAC3BH,EAAAA,QAAQ,EAAEE;AADiB,CAA7B,CAFJ,EAKEF,QALF,CADF;;KAAMF,W;;AASN,SAASO,GAAT,GAAe;AACb,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,GAAJ;AACA,MAAIC,KAAJ;;AAEA,QAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AACrC,QAAIC,cAAc,GAAG,IAAIf,MAAJ,CAAWa,MAAM,CAACG,IAAlB,EAAwBF,IAAxB,EAA8BD,MAAM,CAACI,MAArC,EAA6CJ,MAAM,CAACK,KAApD,EAA2DL,MAAM,CAACM,QAAlE,EAA4EN,MAAM,CAACO,WAAnF,EAAgGP,MAAM,CAACQ,GAAvG,CAArB;AACAZ,IAAAA,OAAO,CAACa,IAAR,CAAaP,cAAb;AAEA,WAAOA,cAAP;AACD,GALD;;AAOA,OAAK,IAAIF,MAAT,IAAmBd,UAAnB,EAA+B;AAC7B,QAAIc,MAAM,CAACG,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAIN,GAAG,GAAGE,YAAY,CAACC,MAAD,EAASf,OAAT,CAAtB;AACD,KAFD,MAEO,IAAIe,MAAM,CAACG,IAAP,KAAgB,OAApB,EAA6B;AAClCL,MAAAA,KAAK,GAAGC,YAAY,CAACC,MAAD,EAASH,GAAT,CAApB;AACD,KAFM,MAEA;AACL,UAAIG,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzBF,QAAAA,YAAY,CAACC,MAAD,EAASH,GAAT,CAAZ;AACD,OAFD,MAEO;AACLE,QAAAA,YAAY,CAACC,MAAD,EAASF,KAAT,CAAZ;AACD;AACF;AACF;;AAED,sBACE,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAE,CAACf,aAAD,EAAgBC,cAAhB,CAAvB;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEY;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MAjCQD,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport SolarSystem from './components/SolarSystem.js';\nimport Background from './components/Background.js';\nimport CustomizationMenu from './components/CustomizaztionMenu.js';\nimport {RadioProvider} from './contexts/RadioContext.js';\nimport {ToggleProvider} from './contexts/ToggleContext.js';\nimport { sunStar, planetInfo } from './consts/PlanetInfo.js';\nimport Planet from './js/Planet.js';\n\nconst AppProvider = ({contexts, children}) =>\n  contexts.reduce(\n    (prev, context) =>\n      React.createElement(context, {\n        children: prev,\n      }),\n    children\n  );\n\nfunction App() {\n  let planets = [];\n  let sun;\n  let earth;\n\n  const createPlanet = (planet, star) => {\n    let planetInstance = new Planet(planet.name, star, planet.radius, planet.color, planet.velocity, planet.orbitRadius, planet.src);\n    planets.push(planetInstance);\n\n    return planetInstance;\n  }\n\n  for (let planet of planetInfo) {\n    if (planet.name === 'sun') {\n      let sun = createPlanet(planet, sunStar);\n    } else if (planet.name === 'earth') {\n      earth = createPlanet(planet, sun);\n    } else {\n      if (planet.star === 'sun') {\n        createPlanet(planet, sun);\n      } else {\n        createPlanet(planet, earth);\n      }\n    }\n  }\n\n  return (\n    <AppProvider contexts={[RadioProvider, ToggleProvider]}>\n      <Background />\n      <SolarSystem planets={planets}/>\n      <CustomizationMenu />\n    </AppProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}