{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\n\nconst useResize = canvas => {\n  _s();\n\n  useEffect(() => {\n    const resizeCanvas = canvas => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    reziseCanvas();\n  }, []);\n};\n\n_s(useResize, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nconst ResizeCanvas = (canvas, ctx) => {\n  const {\n    width,\n    height\n  } = canvas.getBoundingClientRect(); // console.log(width, height);\n  // console.log('innerWidth',window.innerWidth, window.innerHeight);\n  // const ratio = window.devicePixelRatio;\n  // canvas.width = width * ratio;\n  // canvas.height = height * ratio;\n  // canvas.width = window.innerWidth;\n  // canvas.height = window.innerHeight;\n  // canvas.style.width = '100%';\n  // canvas.style.height = '100%';\n  // canvas.style.width = width + 'px';\n  // canvas.style.height = height + 'px';\n  // ctx.scale(ratio, ratio);\n};\n\n_c = ResizeCanvas;\nexport default ResizeCanvas; // const resizeElements = () => {\n//   document.querySelector('html').style.width = '100%';\n//   document.querySelector('html').style.height = '100%';\n//   document.body.style.width = '100%';\n//   document.body.style.height = '100%';\n//   document.getElementById('root').style.width = '100%';\n//   document.getElementById('root').style.height = '100%';\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"ResizeCanvas\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/ResizeCanvas.js"],"names":["useEffect","useResize","canvas","resizeCanvas","width","window","innerWidth","height","innerHeight","reziseCanvas","ResizeCanvas","ctx","getBoundingClientRect"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;;AAEA,MAAMC,SAAS,GAAGC,MAAM,IAAI;AAAA;;AAC1BF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMG,YAAY,GAAGD,MAAM,IAAI;AAC7BA,MAAAA,MAAM,CAACE,KAAP,GAAeC,MAAM,CAACC,UAAtB;AACAJ,MAAAA,MAAM,CAACK,MAAP,GAAgBF,MAAM,CAACG,WAAvB;AACD,KAHD;;AAKAC,IAAAA,YAAY;AAEb,GARQ,EAQN,EARM,CAAT;AASD,CAVD;;GAAMR,S;;AAYN,MAAMS,YAAY,GAAG,CAACR,MAAD,EAASS,GAAT,KAAiB;AACpC,QAAM;AAAEP,IAAAA,KAAF;AAASG,IAAAA;AAAT,MAAoBL,MAAM,CAACU,qBAAP,EAA1B,CADoC,CAEpC;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACD,CAnBD;;KAAMF,Y;AAqBN,eAAeA,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {useEffect} from 'react';\n\nconst useResize = canvas => {\n  useEffect(() => {\n    const resizeCanvas = canvas => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    }\n\n    reziseCanvas();\n    \n  }, []);\n}\n\nconst ResizeCanvas = (canvas, ctx) => {\n  const { width, height } = canvas.getBoundingClientRect();\n  // console.log(width, height);\n  // console.log('innerWidth',window.innerWidth, window.innerHeight);\n  // const ratio = window.devicePixelRatio;\n\n  // canvas.width = width * ratio;\n  // canvas.height = height * ratio;\n\n  // canvas.width = window.innerWidth;\n  // canvas.height = window.innerHeight;\n\n  // canvas.style.width = '100%';\n  // canvas.style.height = '100%';\n\n  // canvas.style.width = width + 'px';\n  // canvas.style.height = height + 'px';\n\n  // ctx.scale(ratio, ratio);\n}\n\nexport default ResizeCanvas;\n\n// const resizeElements = () => {\n//   document.querySelector('html').style.width = '100%';\n//   document.querySelector('html').style.height = '100%';\n//   document.body.style.width = '100%';\n//   document.body.style.height = '100%';\n//   document.getElementById('root').style.width = '100%';\n//   document.getElementById('root').style.height = '100%';\n// }"]},"metadata":{},"sourceType":"module"}