{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/SolarSystem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Planet from './Planet.js';\nimport { usePlanetState, usePlanetDispatch, usePlanetClicked } from './PlanetContext.js';\nimport Canvas from './Canvas.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SolarSystem() {\n  _s();\n\n  const planets = usePlanetState();\n  const clicked = usePlanetClicked();\n  console.log(clicked); // const onDrag = e => {\n  //   dispatch({\n  //     type: 'DRAG',\n  //     orbitRadius: ,\n  //     x: e.clientX,\n  //     y: e.clientY,\n  //   });\n  // }\n\n  const update = (ctx, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageHeight, stageHeight);\n\n    for (let planet of planets) {\n      planet.theta += planet.velocity;\n\n      if (clicked) {\n        planet.x = planet.mouseX;\n        planet.y = planet.mouseY;\n      } else {\n        let star = planets.find(element => element.name === planet.star);\n        planet.x = star.x + planet.orbitRadius * Math.cos(planet.theta);\n        planet.y = star.y + planet.orbitRadius * Math.sin(planet.theta);\n        console.log(planet.x, planet.y);\n      }\n\n      draw(ctx, planet.radius, planet.color, planet.x, planet.y);\n    }\n  };\n\n  const draw = (ctx, radius, color, x, y) => {\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  const onMouseDown = e => {\n    for (let planet of planets) {\n      let offsetX = e.clientX - planet.x;\n      let offsetY = e.clientY - planet.y;\n\n      if (Math.abs(offsetX) <= planet.radius && Math.abs(offsetY) <= planet.radius) {\n        clicked.current = true;\n        planet.mouseX = e.clientX - offsetX;\n        planet.mouseY = e.clientY - offsetY;\n        onMouseMove(e, planet, offsetX, offsetY);\n      }\n    }\n  };\n\n  const onMouseMove = (e, planet, offsetX, offsetY) => {\n    planet.mouseX = e.clientX - offsetX;\n    planet.mouseY = e.clientY - offsetY;\n  };\n\n  const onMouseUp = e => {};\n\n  const onMouseOut = e => {};\n\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    draw: update,\n    id: \"main\",\n    type: \"dynamic\",\n    onMouseDown: onMouseDown\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SolarSystem, \"LDFy6AGSAjJ0eby9X8W+YXXiiuA=\", false, function () {\n  return [usePlanetState, usePlanetClicked];\n});\n\n_c = SolarSystem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SolarSystem\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/SolarSystem.js"],"names":["React","Planet","usePlanetState","usePlanetDispatch","usePlanetClicked","Canvas","SolarSystem","planets","clicked","console","log","update","ctx","stageWidth","stageHeight","clearRect","planet","theta","velocity","x","mouseX","y","mouseY","star","find","element","name","orbitRadius","Math","cos","sin","draw","radius","color","beginPath","arc","PI","fillStyle","fill","closePath","onMouseDown","e","offsetX","clientX","offsetY","clientY","abs","current","onMouseMove","onMouseUp","onMouseOut"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Planet from './Planet.js';\nimport { usePlanetState, usePlanetDispatch, usePlanetClicked } from './PlanetContext.js';\nimport Canvas from './Canvas.js';\n\nexport default function SolarSystem() {\n  const planets = usePlanetState();\n  const clicked = usePlanetClicked();\n  console.log(clicked);\n\n  // const onDrag = e => {\n  //   dispatch({\n  //     type: 'DRAG',\n  //     orbitRadius: ,\n  //     x: e.clientX,\n  //     y: e.clientY,\n  //   });\n  // }\n\n  const update = (ctx, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageHeight, stageHeight);\n\n    for (let planet of planets) {\n      planet.theta += planet.velocity;\n\n      if (clicked) {\n        planet.x = planet.mouseX;\n        planet.y = planet.mouseY;\n      } else {\n        let star = planets.find(element => element.name === planet.star);\n\n        planet.x = star.x + planet.orbitRadius * Math.cos(planet.theta);\n        planet.y = star.y + planet.orbitRadius * Math.sin(planet.theta);\n        console.log(planet.x, planet.y);\n      }\n\n      draw(ctx, planet.radius, planet.color, planet.x, planet.y);\n    }\n  }\n\n  const draw = (ctx, radius, color, x, y) => {\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  const onMouseDown = e => {\n    for (let planet of planets) {\n      let offsetX = e.clientX - planet.x;\n      let offsetY = e.clientY - planet.y;\n\n      if (\n        Math.abs(offsetX) <= planet.radius &&\n        Math.abs(offsetY) <= planet.radius\n      ) {\n        clicked.current = true;\n        planet.mouseX = e.clientX - offsetX;\n        planet.mouseY = e.clientY - offsetY;\n        onMouseMove(e, planet, offsetX, offsetY);\n      }\n    }\n    \n  }\n\n  const onMouseMove = (e, planet, offsetX, offsetY) => {\n    planet.mouseX = e.clientX - offsetX;\n    planet.mouseY = e.clientY - offsetY;\n  }\n\n  const onMouseUp = e => {\n\n  }\n\n  const onMouseOut = e => {\n\n  }\n\n  return (\n    <Canvas draw={update} id='main' type='dynamic' onMouseDown={onMouseDown}/>\n  );\n}"]},"metadata":{},"sourceType":"module"}