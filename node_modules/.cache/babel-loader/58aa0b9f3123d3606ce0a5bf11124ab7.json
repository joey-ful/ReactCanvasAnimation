{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Planet.js\";\n// import React, { useState } from 'react';\nimport Canvas from './Canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Planet = () => {\n  const draw = (ctx, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageHeight, stageHeight);\n    ctx.beginPath();\n    ctx.arc(stageWidth / 2, stageHeight / 2, 20, 0, Math.PI * 2);\n    ctx.fillStyle = 'white';\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    draw: draw,\n    type: \"dynamic\",\n    id: \"main\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Planet;\nexport default Planet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planet\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Planet.js"],"names":["Canvas","Planet","draw","ctx","stageWidth","stageHeight","clearRect","beginPath","arc","Math","PI","fillStyle","fill","closePath"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,UAAN,EAAkBC,WAAlB,KAAkC;AAC7CF,IAAAA,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBD,WAApB,EAAiCA,WAAjC;AACAF,IAAAA,GAAG,CAACI,SAAJ;AACAJ,IAAAA,GAAG,CAACK,GAAJ,CAAQJ,UAAU,GAAC,CAAnB,EAAsBC,WAAW,GAAC,CAAlC,EAAqC,EAArC,EAAyC,CAAzC,EAA4CI,IAAI,CAACC,EAAL,GAAU,CAAtD;AACAP,IAAAA,GAAG,CAACQ,SAAJ,GAAgB,OAAhB;AACAR,IAAAA,GAAG,CAACS,IAAJ;AACAT,IAAAA,GAAG,CAACU,SAAJ;AACD,GAPD;;AAQA,sBAAO,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEX,IAAd;AAAoB,IAAA,IAAI,EAAC,SAAzB;AAAmC,IAAA,EAAE,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAVD;;KAAMD,M;AAYN,eAAeA,MAAf","sourcesContent":["// import React, { useState } from 'react';\nimport Canvas from './Canvas';\n\nconst Planet = () => {\n  const draw = (ctx, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageHeight, stageHeight);\n    ctx.beginPath();\n    ctx.arc(stageWidth/2, stageHeight/2, 20, 0, Math.PI * 2);\n    ctx.fillStyle = 'white';\n    ctx.fill();\n    ctx.closePath();\n  }\n  return <Canvas draw={draw} type='dynamic' id='main'/>\n}\n\nexport default Planet;"]},"metadata":{},"sourceType":"module"}