{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/SolarSystem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Planet from './Planet.js';\nimport { usePlanetState } from './PlanetContext.js';\nimport Canvas from './Canvas.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SolarSystem() {\n  _s();\n\n  const planets = usePlanetState(); // const onDrag = e => {\n  //   dispatch({\n  //     type: 'DRAG',\n  //     orbitRadius: ,\n  //     x: e.clientX,\n  //     y: e.clientY,\n  //   });\n  // }\n\n  const update = (ctx, frameCount, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageHeight, stageHeight);\n\n    for (let planet of planets) {\n      planet.x = draw(ctx, frameCount, planet.radius, planet.color, planet.x, planet.y);\n    }\n  };\n\n  const draw = (ctx, frameCount, radius, color, x, y) => {\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    draw: update,\n    id: \"main\",\n    type: \"dynamic\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SolarSystem, \"HxuCNVO0z9lKOMhZbLyLUecIlUs=\", false, function () {\n  return [usePlanetState];\n});\n\n_c = SolarSystem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SolarSystem\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/SolarSystem.js"],"names":["React","Planet","usePlanetState","Canvas","SolarSystem","planets","update","ctx","frameCount","stageWidth","stageHeight","clearRect","planet","x","draw","radius","color","y","beginPath","arc","Math","PI","fillStyle","fill","closePath"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,OAAO,GAAGH,cAAc,EAA9B,CADoC,CAGpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMI,MAAM,GAAG,CAACC,GAAD,EAAMC,UAAN,EAAkBC,UAAlB,EAA8BC,WAA9B,KAA8C;AAC3DH,IAAAA,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBD,WAApB,EAAiCA,WAAjC;;AAEA,SAAK,IAAIE,MAAT,IAAmBP,OAAnB,EAA4B;AAC1BO,MAAAA,MAAM,CAACC,CAAP,GACAC,IAAI,CAACP,GAAD,EAAMC,UAAN,EAAkBI,MAAM,CAACG,MAAzB,EAAiCH,MAAM,CAACI,KAAxC,EAA+CJ,MAAM,CAACC,CAAtD,EAAyDD,MAAM,CAACK,CAAhE,CADJ;AAED;AACF,GAPD;;AASA,QAAMH,IAAI,GAAG,CAACP,GAAD,EAAMC,UAAN,EAAkBO,MAAlB,EAA0BC,KAA1B,EAAiCH,CAAjC,EAAoCI,CAApC,KAA0C;AACrDV,IAAAA,GAAG,CAACW,SAAJ;AACAX,IAAAA,GAAG,CAACY,GAAJ,CAAQN,CAAR,EAAWI,CAAX,EAAcF,MAAd,EAAsB,CAAtB,EAAyBK,IAAI,CAACC,EAAL,GAAU,CAAnC;AACAd,IAAAA,GAAG,CAACe,SAAJ,GAAgBN,KAAhB;AACAT,IAAAA,GAAG,CAACgB,IAAJ;AACAhB,IAAAA,GAAG,CAACiB,SAAJ;AACD,GAND;;AAQA,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAElB,MAAd;AAAsB,IAAA,EAAE,EAAC,MAAzB;AAAgC,IAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAhCuBF,W;UACNF,c;;;KADME,W","sourcesContent":["import React from 'react';\nimport Planet from './Planet.js';\nimport { usePlanetState } from './PlanetContext.js';\nimport Canvas from './Canvas.js';\n\nexport default function SolarSystem() {\n  const planets = usePlanetState();\n\n  // const onDrag = e => {\n  //   dispatch({\n  //     type: 'DRAG',\n  //     orbitRadius: ,\n  //     x: e.clientX,\n  //     y: e.clientY,\n  //   });\n  // }\n\n  const update = (ctx, frameCount, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageHeight, stageHeight);\n\n    for (let planet of planets) {\n      planet.x = \n      draw(ctx, frameCount, planet.radius, planet.color, planet.x, planet.y);\n    }\n  }\n\n  const draw = (ctx, frameCount, radius, color, x, y) => {\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  return (\n    <Canvas draw={update} id='main' type='dynamic'/>\n  );\n}"]},"metadata":{},"sourceType":"module"}