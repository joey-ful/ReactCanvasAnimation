{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Background.js\";\nimport React from 'react';\nimport Canvas from './Canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Background = () => {\n  const draw = (ctx, stageWidth, stageHeight) => {\n    ctx.fillStyle = createGradient(ctx, stageWidth, stageHeight); // fillStars(ctx, 200);\n\n    ctx.fillRect(0, 0, stageWidth, stageHeight);\n    fillStars(ctx, 200, stageWidth, stageHeight);\n  };\n\n  const fillStars = (ctx, starNumber, stageWidth, stageHeight) => {\n    for (let i = 0; i < starNumber; i++) {\n      let radius = Math.random() * 1 + 0.1;\n      let x = radius + Math.random() * (stageWidth - radius * 2);\n      let y = radius + Math.random() * (stageHeight - radius * 2);\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, Math.PI * 2);\n      ctx.fillStyle = 'white';\n      ctx.shadowColor = 'white';\n      ctx.shadowBlur = 30;\n      ctx.fill();\n      ctx.closePath();\n    }\n  };\n\n  const createGradient = (ctx, stageWidth, stageHeight) => {\n    let gradient = ctx.createRadialGradient(stageWidth / 2, stageHeight / 2, stageWidth / 3, stageWidth / 2, stageHeight / 2, stageWidth / 1.5);\n    gradient.addColorStop(0, '#214568');\n    gradient.addColorStop(1, '#162133');\n    return gradient;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    draw: draw,\n    type: \"static\",\n    id: \"back\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Background;\nexport default Background;\n\nvar _c;\n\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Background.js"],"names":["React","Canvas","Background","draw","ctx","stageWidth","stageHeight","fillStyle","createGradient","fillRect","fillStars","starNumber","i","radius","Math","random","x","y","beginPath","arc","PI","shadowColor","shadowBlur","fill","closePath","gradient","createRadialGradient","addColorStop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,UAAN,EAAkBC,WAAlB,KAAkC;AAC7CF,IAAAA,GAAG,CAACG,SAAJ,GAAgBC,cAAc,CAACJ,GAAD,EAAMC,UAAN,EAAkBC,WAAlB,CAA9B,CAD6C,CAE7C;;AACAF,IAAAA,GAAG,CAACK,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBJ,UAAnB,EAA+BC,WAA/B;AACAI,IAAAA,SAAS,CAACN,GAAD,EAAM,GAAN,EAAWC,UAAX,EAAuBC,WAAvB,CAAT;AACD,GALD;;AAOA,QAAMI,SAAS,GAAG,CAACN,GAAD,EAAMO,UAAN,EAAkBN,UAAlB,EAA8BC,WAA9B,KAA8C;AAC9D,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAApB,EAAgCC,CAAC,EAAjC,EAAqC;AACnC,UAAIC,MAAM,GAAGC,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,GAAjC;AACA,UAAIC,CAAC,GAAGH,MAAM,GAAGC,IAAI,CAACC,MAAL,MAAiBV,UAAU,GAAGQ,MAAM,GAAG,CAAvC,CAAjB;AACA,UAAII,CAAC,GAAGJ,MAAM,GAAGC,IAAI,CAACC,MAAL,MAAiBT,WAAW,GAAGO,MAAM,GAAG,CAAxC,CAAjB;AAEAT,MAAAA,GAAG,CAACc,SAAJ;AACAd,MAAAA,GAAG,CAACe,GAAJ,CAAQH,CAAR,EAAWC,CAAX,EAAcJ,MAAd,EAAsB,CAAtB,EAAyBC,IAAI,CAACM,EAAL,GAAU,CAAnC;AACAhB,MAAAA,GAAG,CAACG,SAAJ,GAAgB,OAAhB;AACAH,MAAAA,GAAG,CAACiB,WAAJ,GAAkB,OAAlB;AACAjB,MAAAA,GAAG,CAACkB,UAAJ,GAAiB,EAAjB;AACAlB,MAAAA,GAAG,CAACmB,IAAJ;AACAnB,MAAAA,GAAG,CAACoB,SAAJ;AACD;AACF,GAdD;;AAgBA,QAAMhB,cAAc,GAAG,CAACJ,GAAD,EAAMC,UAAN,EAAkBC,WAAlB,KAAkC;AACvD,QAAImB,QAAQ,GAAGrB,GAAG,CAACsB,oBAAJ,CACbrB,UAAU,GAAG,CADA,EAEbC,WAAW,GAAG,CAFD,EAGbD,UAAU,GAAG,CAHA,EAIbA,UAAU,GAAG,CAJA,EAKbC,WAAW,GAAG,CALD,EAMbD,UAAU,GAAG,GANA,CAAf;AASAoB,IAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,SAAzB;AACAF,IAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,SAAzB;AAEA,WAAOF,QAAP;AACD,GAdD;;AAgBA,sBAAO,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEtB,IAAd;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,EAAE,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzCD;;KAAMD,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport Canvas from './Canvas';\n\nconst Background = () => {\n  const draw = (ctx, stageWidth, stageHeight) => {\n    ctx.fillStyle = createGradient(ctx, stageWidth, stageHeight);\n    // fillStars(ctx, 200);\n    ctx.fillRect(0, 0, stageWidth, stageHeight);\n    fillStars(ctx, 200, stageWidth, stageHeight);\n  }\n\n  const fillStars = (ctx, starNumber, stageWidth, stageHeight) => {\n    for (let i = 0; i < starNumber; i++) {\n      let radius = Math.random() * 1 + 0.1;\n      let x = radius + Math.random() * (stageWidth - radius * 2);\n      let y = radius + Math.random() * (stageHeight - radius * 2);\n\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, Math.PI * 2);\n      ctx.fillStyle = 'white';\n      ctx.shadowColor = 'white';\n      ctx.shadowBlur = 30;\n      ctx.fill();\n      ctx.closePath();\n    }\n  }\n\n  const createGradient = (ctx, stageWidth, stageHeight) => {\n    let gradient = ctx.createRadialGradient(\n      stageWidth / 2,\n      stageHeight / 2,\n      stageWidth / 3,\n      stageWidth / 2,\n      stageHeight / 2,\n      stageWidth / 1.5\n    );\n\n    gradient.addColorStop(0, '#214568');\n    gradient.addColorStop(1, '#162133');\n\n    return gradient;\n  }\n\n  return <Canvas draw={draw} type='static' id='back'/>\n}\n\nexport default Background;"]},"metadata":{},"sourceType":"module"}