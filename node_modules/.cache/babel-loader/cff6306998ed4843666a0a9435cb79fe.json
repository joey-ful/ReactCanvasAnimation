{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/CustomOptionsContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useContext, createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialCustomOptions = [{\n  name: 'dragTypes',\n  'no-drag': true,\n  'basic-drag': false,\n  'elastic-drag': false\n}, {\n  name: 'shadowTypes',\n  'no-shadow': true,\n  'rectangular-shadow': false,\n  'round-shadow': false\n}];\nconst initialToggleOption = {\n  'background': false,\n  'planet-art': false,\n  'orbit-path': false\n};\n\nfunction customOptionReducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return state.map(option => option.toggle[action.name] = !option.toggle[action.name]);\n\n    case 'RADIO':\n      return state.map(option => option.radio);\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst CustomOptionStateContext = /*#__PURE__*/createContext();\nconst CustomOptionDispatchContext = /*#__PURE__*/createContext();\nexport function CustomOptionProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(customOptionReducer, initialCustomOptions);\n  return /*#__PURE__*/_jsxDEV(CustomOptionStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(CustomOptionDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomOptionProvider, \"eCSg7HI6s/nBBv5I+daC82ssj38=\");\n\n_c = CustomOptionProvider;\nexport function useCustomOptionState() {\n  _s2();\n\n  const context = useContext(CustomOptionStateContext);\n\n  if (!context) {\n    throw new Error('Cannot find CustomOptionProvider');\n  }\n\n  return context;\n}\n\n_s2(useCustomOptionState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useCustomOptionDispatch() {\n  _s3();\n\n  const context = useContext(CustomOptionDispatchContext);\n\n  if (!context) {\n    throw new Error('Cannot find CustomOptionProvider');\n  }\n\n  return context;\n}\n\n_s3(useCustomOptionDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomOptionProvider\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/CustomOptionsContext.js"],"names":["useContext","createContext","useReducer","initialCustomOptions","name","initialToggleOption","customOptionReducer","state","action","type","map","option","toggle","radio","Error","CustomOptionStateContext","CustomOptionDispatchContext","CustomOptionProvider","children","dispatch","useCustomOptionState","context","useCustomOptionDispatch"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,QAAsD,OAAtD;;AAEA,MAAMC,oBAAoB,GAAG,CAC3B;AACEC,EAAAA,IAAI,EAAE,WADR;AAEE,aAAW,IAFb;AAGE,gBAAc,KAHhB;AAIE,kBAAgB;AAJlB,CAD2B,EAO3B;AACEA,EAAAA,IAAI,EAAE,aADR;AAEE,eAAa,IAFf;AAGE,wBAAsB,KAHxB;AAIE,kBAAgB;AAJlB,CAP2B,CAA7B;AAiBA,MAAMC,mBAAmB,GAAG;AAC1B,gBAAc,KADY;AAE1B,gBAAc,KAFY;AAG1B,gBAAc;AAHY,CAA5B;;AAMA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoCC,MAApC,EAA4C;AAC1C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,QAAL;AACE,aAAOF,KAAK,CAACG,GAAN,CAAUC,MAAM,IACrBA,MAAM,CAACC,MAAP,CAAcJ,MAAM,CAACJ,IAArB,IAA6B,CAACO,MAAM,CAACC,MAAP,CAAcJ,MAAM,CAACJ,IAArB,CADzB,CAAP;;AAGF,SAAK,OAAL;AACE,aAAOG,KAAK,CAACG,GAAN,CAAUC,MAAM,IACrBA,MAAM,CAACE,KADF,CAAP;;AAGF;AACE,YAAM,IAAIC,KAAJ,CAAW,0BAAyBN,MAAM,CAACC,IAAK,EAAhD,CAAN;AAVJ;AAYD;;AAED,MAAMM,wBAAwB,gBAAGd,aAAa,EAA9C;AACA,MAAMe,2BAA2B,gBAAGf,aAAa,EAAjD;AAEA,OAAO,SAASgB,oBAAT,CAA8B;AAACC,EAAAA;AAAD,CAA9B,EAA0C;AAAA;;AAC/C,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBjB,UAAU,CAACI,mBAAD,EAAsBH,oBAAtB,CAApC;AAEA,sBACE,QAAC,wBAAD,CAA0B,QAA1B;AAAmC,IAAA,KAAK,EAAEI,KAA1C;AAAA,2BACE,QAAC,2BAAD,CAA6B,QAA7B;AAAsC,MAAA,KAAK,EAAEY,QAA7C;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAVeD,oB;;KAAAA,oB;AAYhB,OAAO,SAASG,oBAAT,GAAgC;AAAA;;AACrC,QAAMC,OAAO,GAAGrB,UAAU,CAACe,wBAAD,CAA1B;;AACA,MAAI,CAACM,OAAL,EAAc;AACZ,UAAM,IAAIP,KAAJ,CAAU,kCAAV,CAAN;AACD;;AACD,SAAOO,OAAP;AACD;;IANeD,oB;;AAQhB,OAAO,SAASE,uBAAT,GAAmC;AAAA;;AACxC,QAAMD,OAAO,GAAGrB,UAAU,CAACgB,2BAAD,CAA1B;;AACA,MAAI,CAACK,OAAL,EAAc;AACZ,UAAM,IAAIP,KAAJ,CAAU,kCAAV,CAAN;AACD;;AACD,SAAOO,OAAP;AACD;;IANeC,uB","sourcesContent":["import { useContext, createContext, useReducer } from 'react';\n\nconst initialCustomOptions = [\n  {\n    name: 'dragTypes',\n    'no-drag': true,\n    'basic-drag': false,\n    'elastic-drag': false,\n  },\n  {\n    name: 'shadowTypes',\n    'no-shadow': true,\n    'rectangular-shadow': false,\n    'round-shadow': false,\n  },\n];\n\n\n\nconst initialToggleOption = {\n  'background': false,\n  'planet-art': false,\n  'orbit-path': false,\n};\n\nfunction customOptionReducer(state, action) {\n  switch(action.type) {\n    case 'TOGGLE':\n      return state.map(option =>\n        option.toggle[action.name] = !option.toggle[action.name]\n      );\n    case 'RADIO':\n      return state.map(option =>\n        option.radio\n      );\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst CustomOptionStateContext = createContext();\nconst CustomOptionDispatchContext = createContext();\n\nexport function CustomOptionProvider({children}) {\n  const [state, dispatch] = useReducer(customOptionReducer, initialCustomOptions);\n\n  return (\n    <CustomOptionStateContext.Provider value={state}>\n      <CustomOptionDispatchContext.Provider value={dispatch}>\n        {children}\n      </CustomOptionDispatchContext.Provider>\n    </CustomOptionStateContext.Provider>\n  );\n}\n\nexport function useCustomOptionState() {\n  const context = useContext(CustomOptionStateContext);\n  if (!context) {\n    throw new Error('Cannot find CustomOptionProvider');\n  }\n  return context;\n}\n\nexport function useCustomOptionDispatch() {\n  const context = useContext(CustomOptionDispatchContext);\n  if (!context) {\n    throw new Error('Cannot find CustomOptionProvider');\n  }\n  return context;\n}"]},"metadata":{},"sourceType":"module"}