{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Toggle.js\",\n    _s = $RefreshSig$();\n\nimport { useToggleDispatch } from './contexts/ToggleContext.js';\nimport styled, { css } from 'styled-components';\nimport { Input } from './CustomizaztionMenu.js';\nimport { colors } from './Colors.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleLabel = styled.label`\n  cursor: pointer;\n`;\n_c = ToggleLabel;\nconst Slider = styled.span`\n  display: inline-block;\n  position: relative;\n  width: 28px;\n  height: 12px;\n  background-color: ${colors['default']};\n  cursor: pointer;\n  border-radius: 15px;\n  top: 6px;\n  &:before {\n    display: inline-block;\n    position: relative;\n    content: '';\n    height: 16px;\n    width: 16px;\n    bottom: 2px;\n    background-color: white;\n    transition: all 0.4s ease;\n    border-radius: 50%;\n    box-shadow: 2px 2px 8px ${colors['shadow']};\n    ${props => props.checkmark && css`\n        transform: translateX(14px);\n      `};\n  }\n  ${props => props.checked && css`\n      background-color: ${colors['checked']};\n    `}\n`;\n_c2 = Slider;\nconst Text = styled.span`\n  font-size: 0.9rem;\n  position: relative;\n  left: 10px;\n  color: ${colors['default']};\n  ${props => props.checkmark && css`\n      color: ${colors['checked']};\n    `}\n`;\n_c3 = Text;\nconst List = styled.li`\n  list-style: none;\n  margin: 10px 0 5px 7px;\n  &:hover {\n    ${Slider} {\n      background-color: ${colors['hovered']};\n    }\n    ${Text} {\n      color: ${colors['hovered']};\n    }\n  }\n`;\n_c4 = List;\nexport default function Toggle({\n  optionName,\n  checked,\n  id\n}) {\n  _s();\n\n  const dispatch = useToggleDispatch();\n\n  const onToggle = () => {\n    dispatch({\n      type: 'TOGGLE',\n      name: optionName\n    });\n    console.log(optionName, checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: /*#__PURE__*/_jsxDEV(ToggleLabel, {\n      htmlFor: optionName,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"checkbox\",\n        id: optionName,\n        checked: checked,\n        onChange: onToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        checkmark: checked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        checkmark: checked,\n        children: optionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Toggle, \"KKlUJXOKAjExzNjVl3GdrgBZSGg=\", false, function () {\n  return [useToggleDispatch];\n});\n\n_c5 = Toggle;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ToggleLabel\");\n$RefreshReg$(_c2, \"Slider\");\n$RefreshReg$(_c3, \"Text\");\n$RefreshReg$(_c4, \"List\");\n$RefreshReg$(_c5, \"Toggle\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Toggle.js"],"names":["useToggleDispatch","styled","css","Input","colors","ToggleLabel","label","Slider","span","props","checkmark","checked","Text","List","li","Toggle","optionName","id","dispatch","onToggle","type","name","console","log"],"mappings":";;;AAAA,SAAQA,iBAAR,QAAgC,6BAAhC;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAAQC,KAAR,QAAoB,yBAApB;AACA,SAAQC,MAAR,QAAqB,aAArB;;AAEA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,KAAM;AACjC;AACA,CAFA;KAAMD,W;AAIN,MAAME,MAAM,GAAGN,MAAM,CAACO,IAAK;AAC3B;AACA;AACA;AACA;AACA,sBAAsBJ,MAAM,CAAC,SAAD,CAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8BA,MAAM,CAAC,QAAD,CAAW;AAC/C,MAAOK,KAAD,IACAA,KAAK,CAACC,SAAN,IACAR,GAAI;AACV;AACA,OAAQ;AACR;AACA,IAAKO,KAAD,IACAA,KAAK,CAACE,OAAN,IACAT,GAAI;AACR,0BAA0BE,MAAM,CAAC,SAAD,CAAY;AAC5C,KAAM;AACN,CA/BA;MAAMG,M;AAiCN,MAAMK,IAAI,GAAGX,MAAM,CAACO,IAAK;AACzB;AACA;AACA;AACA,WAAWJ,MAAM,CAAC,SAAD,CAAY;AAC7B,IAAKK,KAAD,IACAA,KAAK,CAACC,SAAN,IACAR,GAAI;AACR,eAAeE,MAAM,CAAC,SAAD,CAAY;AACjC,KAAM;AACN,CAVA;MAAMQ,I;AAYN,MAAMC,IAAI,GAAGZ,MAAM,CAACa,EAAG;AACvB;AACA;AACA;AACA,MAAMP,MAAO;AACb,0BAA0BH,MAAM,CAAC,SAAD,CAAY;AAC5C;AACA,MAAMQ,IAAK;AACX,eAAeR,MAAM,CAAC,SAAD,CAAY;AACjC;AACA;AACA,CAXA;MAAMS,I;AAaN,eAAe,SAASE,MAAT,CAAgB;AAACC,EAAAA,UAAD;AAAaL,EAAAA,OAAb;AAAsBM,EAAAA;AAAtB,CAAhB,EAA2C;AAAA;;AACxD,QAAMC,QAAQ,GAAGlB,iBAAiB,EAAlC;;AAEA,QAAMmB,QAAQ,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,QADC;AAEPC,MAAAA,IAAI,EAAEL;AAFC,KAAD,CAAR;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ,EAAwBL,OAAxB;AACD,GAND;;AAQA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEK,UAAtB;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAEA,UAFN;AAGE,QAAA,OAAO,EAAEL,OAHX;AAIE,QAAA,QAAQ,EAAEQ;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAER;AAAnB;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEA,OAAjB;AAAA,kBAA2BK;AAA3B;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAzBuBD,M;UACLf,iB;;;MADKe,M","sourcesContent":["import {useToggleDispatch} from './contexts/ToggleContext.js';\nimport styled, {css} from 'styled-components';\nimport {Input} from './CustomizaztionMenu.js';\nimport {colors} from './Colors.js';\n\nconst ToggleLabel = styled.label`\n  cursor: pointer;\n`;\n\nconst Slider = styled.span`\n  display: inline-block;\n  position: relative;\n  width: 28px;\n  height: 12px;\n  background-color: ${colors['default']};\n  cursor: pointer;\n  border-radius: 15px;\n  top: 6px;\n  &:before {\n    display: inline-block;\n    position: relative;\n    content: '';\n    height: 16px;\n    width: 16px;\n    bottom: 2px;\n    background-color: white;\n    transition: all 0.4s ease;\n    border-radius: 50%;\n    box-shadow: 2px 2px 8px ${colors['shadow']};\n    ${(props) =>\n      props.checkmark &&\n      css`\n        transform: translateX(14px);\n      `};\n  }\n  ${(props) =>\n    props.checked &&\n    css`\n      background-color: ${colors['checked']};\n    `}\n`;\n\nconst Text = styled.span`\n  font-size: 0.9rem;\n  position: relative;\n  left: 10px;\n  color: ${colors['default']};\n  ${(props) =>\n    props.checkmark &&\n    css`\n      color: ${colors['checked']};\n    `}\n`;\n\nconst List = styled.li`\n  list-style: none;\n  margin: 10px 0 5px 7px;\n  &:hover {\n    ${Slider} {\n      background-color: ${colors['hovered']};\n    }\n    ${Text} {\n      color: ${colors['hovered']};\n    }\n  }\n`;\n\nexport default function Toggle({optionName, checked, id}) {\n  const dispatch = useToggleDispatch();\n\n  const onToggle = () => {\n    dispatch({\n      type: 'TOGGLE',\n      name: optionName,\n    });\n    console.log(optionName, checked);\n  };\n\n  return (\n    <List>\n      <ToggleLabel htmlFor={optionName}>\n        <Input\n          type='checkbox'\n          id={optionName}\n          checked={checked}\n          onChange={onToggle}\n        ></Input>\n        <Slider checkmark={checked}></Slider>\n        <Text checkmark={checked}>{optionName}</Text>\n      </ToggleLabel>\n    </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}