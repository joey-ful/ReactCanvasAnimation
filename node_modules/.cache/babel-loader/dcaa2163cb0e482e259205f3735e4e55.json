{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/CustomOptionsContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useContext, createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialRadios = [{\n  name: 'dragTypes',\n  'no-drag': true,\n  'basic-drag': false,\n  'elastic-drag': false\n}, {\n  name: 'shadowTypes',\n  'no-shadow': true,\n  'rectangular-shadow': false,\n  'round-shadow': false\n}];\nconst initialToggles = {\n  'background': false,\n  'planet-art': false,\n  'orbit-path': false\n};\n\nfunction toggleReducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return state.map(option => option.toggle[action.name] = !option.toggle[action.name]);\n\n    case 'RADIO':\n      return state.map(option => option.radio);\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst ToggleStateContext = /*#__PURE__*/createContext();\nconst ToggleDispatchContext = /*#__PURE__*/createContext();\nexport function ToggleProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(toggleReducer, initialToggles);\n  return /*#__PURE__*/_jsxDEV(ToggleStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(ToggleDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToggleProvider, \"sJVQwRokgFwWN1DBleySHFo0AmI=\");\n\n_c = ToggleProvider;\nexport function useToggleState() {\n  _s2();\n\n  const context = useContext(ToggleStateContext);\n\n  if (!context) {\n    throw new Error('Cannot find ToggleProvider');\n  }\n\n  return context;\n}\n\n_s2(useToggleState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useToggleDispatch() {\n  _s3();\n\n  const context = useContext(ToggleDispatchContext);\n\n  if (!context) {\n    throw new Error('Cannot find CustomOptionProvider');\n  }\n\n  return context;\n}\n\n_s3(useToggleDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleProvider\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/CustomOptionsContext.js"],"names":["useContext","createContext","useReducer","initialRadios","name","initialToggles","toggleReducer","state","action","type","map","option","toggle","radio","Error","ToggleStateContext","ToggleDispatchContext","ToggleProvider","children","dispatch","useToggleState","context","useToggleDispatch"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,QAAsD,OAAtD;;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,IAAI,EAAE,WADR;AAEE,aAAW,IAFb;AAGE,gBAAc,KAHhB;AAIE,kBAAgB;AAJlB,CADoB,EAOpB;AACEA,EAAAA,IAAI,EAAE,aADR;AAEE,eAAa,IAFf;AAGE,wBAAsB,KAHxB;AAIE,kBAAgB;AAJlB,CAPoB,CAAtB;AAeA,MAAMC,cAAc,GAAG;AACrB,gBAAc,KADO;AAErB,gBAAc,KAFO;AAGrB,gBAAc;AAHO,CAAvB;;AAMA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AACpC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,QAAL;AACE,aAAOF,KAAK,CAACG,GAAN,CAAUC,MAAM,IACrBA,MAAM,CAACC,MAAP,CAAcJ,MAAM,CAACJ,IAArB,IAA6B,CAACO,MAAM,CAACC,MAAP,CAAcJ,MAAM,CAACJ,IAArB,CADzB,CAAP;;AAGF,SAAK,OAAL;AACE,aAAOG,KAAK,CAACG,GAAN,CAAUC,MAAM,IACrBA,MAAM,CAACE,KADF,CAAP;;AAGF;AACE,YAAM,IAAIC,KAAJ,CAAW,0BAAyBN,MAAM,CAACC,IAAK,EAAhD,CAAN;AAVJ;AAYD;;AAED,MAAMM,kBAAkB,gBAAGd,aAAa,EAAxC;AACA,MAAMe,qBAAqB,gBAAGf,aAAa,EAA3C;AAEA,OAAO,SAASgB,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAAoC;AAAA;;AACzC,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBjB,UAAU,CAACI,aAAD,EAAgBD,cAAhB,CAApC;AAEA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEE,KAApC;AAAA,2BACE,QAAC,qBAAD,CAAuB,QAAvB;AAAgC,MAAA,KAAK,EAAEY,QAAvC;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAVeD,c;;KAAAA,c;AAYhB,OAAO,SAASG,cAAT,GAA0B;AAAA;;AAC/B,QAAMC,OAAO,GAAGrB,UAAU,CAACe,kBAAD,CAA1B;;AACA,MAAI,CAACM,OAAL,EAAc;AACZ,UAAM,IAAIP,KAAJ,CAAU,4BAAV,CAAN;AACD;;AACD,SAAOO,OAAP;AACD;;IANeD,c;;AAQhB,OAAO,SAASE,iBAAT,GAA6B;AAAA;;AAClC,QAAMD,OAAO,GAAGrB,UAAU,CAACgB,qBAAD,CAA1B;;AACA,MAAI,CAACK,OAAL,EAAc;AACZ,UAAM,IAAIP,KAAJ,CAAU,kCAAV,CAAN;AACD;;AACD,SAAOO,OAAP;AACD;;IANeC,iB","sourcesContent":["import { useContext, createContext, useReducer } from 'react';\n\nconst initialRadios = [\n  {\n    name: 'dragTypes',\n    'no-drag': true,\n    'basic-drag': false,\n    'elastic-drag': false,\n  },\n  {\n    name: 'shadowTypes',\n    'no-shadow': true,\n    'rectangular-shadow': false,\n    'round-shadow': false,\n  },\n];\n\nconst initialToggles = {\n  'background': false,\n  'planet-art': false,\n  'orbit-path': false,\n};\n\nfunction toggleReducer(state, action) {\n  switch(action.type) {\n    case 'TOGGLE':\n      return state.map(option =>\n        option.toggle[action.name] = !option.toggle[action.name]\n      );\n    case 'RADIO':\n      return state.map(option =>\n        option.radio\n      );\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst ToggleStateContext = createContext();\nconst ToggleDispatchContext = createContext();\n\nexport function ToggleProvider({children}) {\n  const [state, dispatch] = useReducer(toggleReducer, initialToggles);\n\n  return (\n    <ToggleStateContext.Provider value={state}>\n      <ToggleDispatchContext.Provider value={dispatch}>\n        {children}\n      </ToggleDispatchContext.Provider>\n    </ToggleStateContext.Provider>\n  );\n}\n\nexport function useToggleState() {\n  const context = useContext(ToggleStateContext);\n  if (!context) {\n    throw new Error('Cannot find ToggleProvider');\n  }\n  return context;\n}\n\nexport function useToggleDispatch() {\n  const context = useContext(ToggleDispatchContext);\n  if (!context) {\n    throw new Error('Cannot find CustomOptionProvider');\n  }\n  return context;\n}"]},"metadata":{},"sourceType":"module"}