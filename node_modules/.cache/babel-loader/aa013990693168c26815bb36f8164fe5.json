{"ast":null,"code":"export default class Planet {\n  constructor(name, star, radius, color, velocity, orbitRadius) {\n    this.onMouseDown = e => {\n      this.offsetX = e.clientX - this.x;\n      this.offsetY = e.clientY - this.y;\n\n      if (Math.abs(this.offsetX) <= this.radius && Math.abs(this.offsetY) <= this.radius) {\n        this.clicked = true;\n        this.canvas.addEventListener('mousemove', this.onMouseMove);\n      }\n    };\n\n    this.onMouseMove = e => {\n      this.mouse.x = e.clientX - this.offsetX;\n      this.mouse.y = e.clientY - this.offsetY;\n    };\n\n    this.restore = () => {\n      if (this.clicked && this.name !== 'sun') {\n        this.clicked = false;\n        this.orbitRadius = Math.sqrt(Math.pow(this.star.x - this.x, 2) + Math.pow(this.star.y - this.y, 2));\n        this.theta = Math.acos((this.x - this.star.x) / this.orbitRadius);\n\n        if (this.y - this.star.y < 0) {\n          this.theta = 2 * Math.PI - this.theta;\n        }\n\n        this.canvas.removeEventListener('mousemove', this.onMouseMove);\n      } else if (this.clicked && this.name === 'sun') {\n        this.clicked = false;\n        this.star.x = this.x;\n        this.star.y = this.y;\n        this.canvas.removeEventListener('mousemove', this.onMouseMove);\n      }\n\n      this.canvas.removeEventListener('mousedown', this.onMouseDown);\n    };\n\n    this.name = name;\n    this.star = star;\n    this.radius = radius;\n    this.color = color;\n    this.velocity = velocity;\n    this.orbitRadius = orbitRadius;\n    this.theta = Math.random() * Math.PI * 2;\n    this.clicked = false;\n    this.mouse = {\n      x: star.x,\n      y: star.y\n    };\n  }\n\n  update(ctx, canvas) {\n    this.interaction(canvas);\n    this.theta += this.velocity;\n\n    if (this.clicked) {\n      this.x = this.mouse.x;\n      this.y = this.mouse.y;\n    } else {\n      this.x = this.star.x + this.orbitRadius * Math.cos(this.theta);\n      this.y = this.star.y + this.orbitRadius * Math.sin(this.theta);\n    }\n\n    this.draw(ctx);\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  interaction() {\n    this.canvas = document.getElementById('canvas');\n    this.canvas.addEventListener('mousedown', this.onMouseDown);\n    this.canvas.addEventListener('mouseup', this.restore);\n    this.canvas.addEventListener('mouseout', this.restore);\n  }\n\n}","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Planet.js"],"names":["Planet","constructor","name","star","radius","color","velocity","orbitRadius","onMouseDown","e","offsetX","clientX","x","offsetY","clientY","y","Math","abs","clicked","canvas","addEventListener","onMouseMove","mouse","restore","sqrt","pow","theta","acos","PI","removeEventListener","random","update","ctx","interaction","cos","sin","draw","beginPath","arc","fillStyle","fill","closePath","document","getElementById"],"mappings":"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","sourcesContent":["export default class Planet {\n  constructor(name, star, radius, color, velocity, orbitRadius) {\n    this.name = name;\n    this.star = star;\n    this.radius = radius;\n    this.color = color;\n    this.velocity = velocity;\n    this.orbitRadius = orbitRadius;\n\n    this.theta = Math.random() * Math.PI * 2;\n    this.clicked = false;\n\n    this.mouse = {\n      x: star.x,\n      y: star.y,\n    };\n  }\n\n  update(ctx, canvas) {\n    this.interaction(canvas);\n    this.theta += this.velocity;\n\n    if (this.clicked) {\n      this.x = this.mouse.x;\n      this.y = this.mouse.y;\n    } else {\n      this.x = this.star.x + this.orbitRadius * Math.cos(this.theta);\n      this.y = this.star.y + this.orbitRadius * Math.sin(this.theta);\n    }\n\n    this.draw(ctx);\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  interaction() {\n    this.canvas = document.getElementById('canvas');\n\n    this.canvas.addEventListener('mousedown', this.onMouseDown);\n    this.canvas.addEventListener('mouseup', this.restore);\n    this.canvas.addEventListener('mouseout', this.restore);\n  }\n\n  onMouseDown = (e) => {\n    this.offsetX = e.clientX - this.x;\n    this.offsetY = e.clientY - this.y;\n\n    if (\n      Math.abs(this.offsetX) <= this.radius &&\n      Math.abs(this.offsetY) <= this.radius\n    ) {\n      this.clicked = true;\n      this.canvas.addEventListener('mousemove', this.onMouseMove);\n    }\n  };\n\n  onMouseMove = (e) => {\n    this.mouse.x = e.clientX - this.offsetX;\n    this.mouse.y = e.clientY - this.offsetY;\n  };\n\n  restore = () => {\n    if (this.clicked && this.name !== 'sun') {\n      this.clicked = false;\n      \n      this.orbitRadius = Math.sqrt(\n        Math.pow(this.star.x - this.x, 2) + Math.pow(this.star.y - this.y, 2)\n      );\n\n      this.theta = Math.acos((this.x - this.star.x) / this.orbitRadius);\n\n      if (this.y - this.star.y < 0) {\n        this.theta = 2 * Math.PI - this.theta;\n      }\n      this.canvas.removeEventListener('mousemove', this.onMouseMove);\n    } else if (this.clicked && this.name === 'sun') {\n      this.clicked = false;\n      this.star.x = this.x;\n      this.star.y = this.y;\n      this.canvas.removeEventListener('mousemove', this.onMouseMove);\n    }\n    \n    this.canvas.removeEventListener('mousedown', this.onMouseDown);\n  };\n}"]},"metadata":{},"sourceType":"module"}