{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/CustomizaztionMenu.js\",\n    _s = $RefreshSig$();\n\nimport { useRadioState } from './contexts/RadioContext.js';\nimport { useToggleState } from './contexts/ToggleContext.js';\nimport Toggle from './Toggle.js';\nimport RadioList from './RadioList.js';\nimport styled from 'styled-components';\nimport { colors } from './consts/Colors.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomizationMenuBlock = styled.div`\n  position: absolute;\n  top: 30px;\n  right: 15px;\n  padding: 0;\n  margin: 0;\n  padding: 15px;\n  background-color: ${colors['menu']};\n  border-radius: 8px;\n  box-shadow: 4px 4px 12px ${colors['dark-shadow']};\n`;\n_c = CustomizationMenuBlock;\nconst MenuTitle = styled.h1`\n  color: ${colors['menu-title']};\n  font-size: 1.1rem;\n  margin-top: 0;\n  margin-bottom: 25px;\n  margin-left: 3px;\n`;\n_c2 = MenuTitle;\nconst Separator = styled.div`\n  position: absolute;\n  width: 220px;\n  height: 1px;\n  background-color: ${colors['light-grey']};\n  top: 45px;\n  right: 0px;\n  padding: 0;\n  margin-bottom: 15px;\n`;\n_c3 = Separator;\nexport const Input = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n  position: absolute;\n  cursor: pointer;\n`;\nexport default function CustomizationMenu() {\n  _s();\n\n  const radioOptions = useRadioState();\n  const toggleOptions = useToggleState();\n  return /*#__PURE__*/_jsxDEV(CustomizationMenuBlock, {\n    children: [/*#__PURE__*/_jsxDEV(MenuTitle, {\n      children: \"Animation Effects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Separator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), radioOptions.map(radio => /*#__PURE__*/_jsxDEV(RadioList, {\n      radioType: radio.type,\n      radioOptions: radio.options\n    }, radio.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)), toggleOptions.map(toggle => /*#__PURE__*/_jsxDEV(Toggle, {\n      optionName: toggle.name,\n      checked: toggle.checked\n    }, toggle.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomizationMenu, \"bjY56btLaiWI2GwxFQF6wc2luhM=\", false, function () {\n  return [useRadioState, useToggleState];\n});\n\n_c4 = CustomizationMenu;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CustomizationMenuBlock\");\n$RefreshReg$(_c2, \"MenuTitle\");\n$RefreshReg$(_c3, \"Separator\");\n$RefreshReg$(_c4, \"CustomizationMenu\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/CustomizaztionMenu.js"],"names":["useRadioState","useToggleState","Toggle","RadioList","styled","colors","CustomizationMenuBlock","div","MenuTitle","h1","Separator","Input","input","CustomizationMenu","radioOptions","toggleOptions","map","radio","type","options","id","toggle","name","checked"],"mappings":";;;AAAA,SAAQA,aAAR,QAA4B,4BAA5B;AACA,SAAQC,cAAR,QAA6B,6BAA7B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,MAAR,QAAqB,oBAArB;;AAEA,MAAMC,sBAAsB,GAAGF,MAAM,CAACG,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBF,MAAM,CAAC,MAAD,CAAS;AACrC;AACA,6BAA6BA,MAAM,CAAC,aAAD,CAAgB;AACnD,CAVA;KAAMC,sB;AAYN,MAAME,SAAS,GAAGJ,MAAM,CAACK,EAAG;AAC5B,WAAWJ,MAAM,CAAC,YAAD,CAAe;AAChC;AACA;AACA;AACA;AACA,CANA;MAAMG,S;AAQN,MAAME,SAAS,GAAGN,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA,sBAAsBF,MAAM,CAAC,YAAD,CAAe;AAC3C;AACA;AACA;AACA;AACA,CATA;MAAMK,S;AAWN,OAAO,MAAMC,KAAK,GAAGP,MAAM,CAACQ,KAAM;AAClC;AACA;AACA;AACA;AACA;AACA,CANO;AAQP,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAMC,YAAY,GAAGd,aAAa,EAAlC;AACA,QAAMe,aAAa,GAAGd,cAAc,EAApC;AAEA,sBACE,QAAC,sBAAD;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGa,YAAY,CAACE,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;AACE,MAAA,SAAS,EAAEA,KAAK,CAACC,IADnB;AAEE,MAAA,YAAY,EAAED,KAAK,CAACE;AAFtB,OAGOF,KAAK,CAACG,EAHb;AAAA;AAAA;AAAA;AAAA,YADD,CAHH,EAUGL,aAAa,CAACC,GAAd,CAAmBK,MAAD,iBACjB,QAAC,MAAD;AACE,MAAA,UAAU,EAAEA,MAAM,CAACC,IADrB;AAEE,MAAA,OAAO,EAAED,MAAM,CAACE;AAFlB,OAGOF,MAAM,CAACD,EAHd;AAAA;AAAA;AAAA;AAAA,YADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAxBuBP,iB;UACDb,a,EACCC,c;;;MAFAY,iB","sourcesContent":["import {useRadioState} from './contexts/RadioContext.js';\nimport {useToggleState} from './contexts/ToggleContext.js';\nimport Toggle from './Toggle.js';\nimport RadioList from './RadioList.js';\nimport styled from 'styled-components';\nimport {colors} from './consts/Colors.js';\n\nconst CustomizationMenuBlock = styled.div`\n  position: absolute;\n  top: 30px;\n  right: 15px;\n  padding: 0;\n  margin: 0;\n  padding: 15px;\n  background-color: ${colors['menu']};\n  border-radius: 8px;\n  box-shadow: 4px 4px 12px ${colors['dark-shadow']};\n`;\n\nconst MenuTitle = styled.h1`\n  color: ${colors['menu-title']};\n  font-size: 1.1rem;\n  margin-top: 0;\n  margin-bottom: 25px;\n  margin-left: 3px;\n`;\n\nconst Separator = styled.div`\n  position: absolute;\n  width: 220px;\n  height: 1px;\n  background-color: ${colors['light-grey']};\n  top: 45px;\n  right: 0px;\n  padding: 0;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n  position: absolute;\n  cursor: pointer;\n`;\n\nexport default function CustomizationMenu() {\n  const radioOptions = useRadioState();\n  const toggleOptions = useToggleState();\n  \n  return (\n    <CustomizationMenuBlock>\n      <MenuTitle>Animation Effects</MenuTitle>\n      <Separator />\n      {radioOptions.map((radio) => (\n        <RadioList\n          radioType={radio.type}\n          radioOptions={radio.options}\n          key={radio.id}\n        />\n      ))}\n      {toggleOptions.map((toggle) => (\n        <Toggle\n          optionName={toggle.name}\n          checked={toggle.checked}\n          key={toggle.id}\n        />\n      ))}\n    </CustomizationMenuBlock>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}