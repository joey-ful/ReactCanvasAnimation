{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/src/App.js\";\nimport React from 'react';\nimport SolarSystem from './components/SolarSystem.js';\nimport Background from './components/Background.js';\nimport CustomizationMenu from './components/CustomizaztionMenu.js';\nimport { RadioProvider } from './contexts/RadioContext.js';\nimport { ToggleProvider } from './contexts/ToggleContext.js';\nimport { planetInfo } from '../consts/PlanetInfo.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppProvider = ({\n  contexts,\n  children\n}) => contexts.reduce((prev, context) => /*#__PURE__*/React.createElement(context, {\n  children: prev\n}), children);\n\n_c = AppProvider;\n\nfunction App() {\n  let planets = [];\n\n  const createPlanets = () => {\n    console.log(\"createPlanets\");\n    let sun;\n    let earth;\n\n    for (let planet of planetInfo) {\n      if (planet.name === 'sun') {\n        let sunStar = {\n          x: window.innerWidth / 2,\n          y: window.innerHeight / 2\n        };\n        sun = new Planet(planet.name, sunStar, planet.radius, planet.color, planet.velocity, planet.orbitRadius, planet.src);\n        planets.push(sun);\n      } else if (planet.name === 'earth') {\n        earth = new Planet(planet.name, sun, planet.radius, planet.color, planet.velocity, planet.orbitRadius, planet.src);\n        planets.push(earth);\n      } else {\n        if (planet.star === 'sun') {\n          planets.push(new Planet(planet.name, sun, planet.radius, planet.color, planet.velocity, planet.orbitRadius, planet.src));\n        } else {\n          planets.push(new Planet(planet.name, earth, planet.radius, planet.color, planet.velocity, planet.orbitRadius, planet.src));\n        }\n      }\n    }\n  };\n\n  createPlanets();\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    contexts: [RadioProvider, ToggleProvider],\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SolarSystem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomizationMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppProvider\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/src/App.js"],"names":["React","SolarSystem","Background","CustomizationMenu","RadioProvider","ToggleProvider","planetInfo","AppProvider","contexts","children","reduce","prev","context","createElement","App","planets","createPlanets","console","log","sun","earth","planet","name","sunStar","x","window","innerWidth","y","innerHeight","Planet","radius","color","velocity","orbitRadius","src","push","star"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SolarSystem from './components/SolarSystem.js';\nimport Background from './components/Background.js';\nimport CustomizationMenu from './components/CustomizaztionMenu.js';\nimport {RadioProvider} from './contexts/RadioContext.js';\nimport {ToggleProvider} from './contexts/ToggleContext.js';\nimport { planetInfo } from '../consts/PlanetInfo.js';\n\nconst AppProvider = ({contexts, children}) =>\n  contexts.reduce(\n    (prev, context) =>\n      React.createElement(context, {\n        children: prev,\n      }),\n    children\n  );\n\nfunction App() {\n  let planets = [];\n  const createPlanets = () => {\n    console.log(\"createPlanets\");\n    let sun;\n    let earth;\n  \n    for (let planet of planetInfo) {\n      if (planet.name === 'sun') {\n        let sunStar = {\n          x: window.innerWidth/2,\n          y: window.innerHeight/2,\n        }\n        sun = new Planet(planet.name, sunStar, planet.radius, planet.color, planet.velocity, planet.orbitRadius, planet.src);\n        planets.push(sun);\n      } else if (planet.name === 'earth') {\n        earth = new Planet(planet.name, sun, planet.radius, planet.color, planet.velocity, planet.orbitRadius, planet.src);\n        planets.push(earth);\n      } else {\n        if (planet.star === 'sun') {\n          planets.push(new Planet(planet.name, sun, planet.radius, planet.color, planet.velocity, planet.orbitRadius, planet.src));\n        } else {\n          planets.push(new Planet(planet.name, earth, planet.radius, planet.color, planet.velocity, planet.orbitRadius, planet.src));\n        }\n      }\n    }\n  }\n  createPlanets();\n\n  return (\n    <AppProvider contexts={[RadioProvider, ToggleProvider]}>\n      <Background />\n      <SolarSystem/>\n      <CustomizationMenu />\n    </AppProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}