{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\n\nconst useCanvas = draw => {\n  _s();\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let stageWidth = window.innerWidth;\n    let stageHeight = window.innerHeight;\n\n    const resize = () => {\n      stageWidth = window.innerWidth;\n      stageHeight = window.innerHeight; // const ratio = window.devicePixelRatio;\n      // canvas.width = stageWidth * ratio;\n      // canvas.height = stageHeight * ratio;\n\n      canvas.style.width = stageWidth + 'px';\n      canvas.style.height = stageHeight + 'px'; // ctx.scale(ratio, ratio);\n\n      window.addEventListener('resize', resize);\n    };\n\n    let frameCount = 0;\n    let animationFrameId;\n\n    const render = () => {\n      frameCount++;\n      draw(ctx, frameCount, stageWidth, stageHeight);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    resize();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n      window.removeEventListener('resize', resize);\n    };\n  }, [draw]);\n  return canvasRef;\n};\n\n_s(useCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\nexport default useCanvas;","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Hooks/useCanvas.js"],"names":["useRef","useEffect","useCanvas","draw","canvasRef","canvas","current","ctx","getContext","stageWidth","window","innerWidth","stageHeight","innerHeight","resize","style","width","height","addEventListener","frameCount","animationFrameId","render","requestAnimationFrame","cancelAnimationFrame","removeEventListener"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;;AAEA,MAAMC,SAAS,GAAGC,IAAI,IAAI;AAAA;;AACxB,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,QAAIC,UAAU,GAAGC,MAAM,CAACC,UAAxB;AACA,QAAIC,WAAW,GAAGF,MAAM,CAACG,WAAzB;;AAEA,UAAMC,MAAM,GAAG,MAAM;AACnBL,MAAAA,UAAU,GAAGC,MAAM,CAACC,UAApB;AACAC,MAAAA,WAAW,GAAGF,MAAM,CAACG,WAArB,CAFmB,CAGnB;AAEA;AACA;;AAEAR,MAAAA,MAAM,CAACU,KAAP,CAAaC,KAAb,GAAqBP,UAAU,GAAG,IAAlC;AACAJ,MAAAA,MAAM,CAACU,KAAP,CAAaE,MAAb,GAAsBL,WAAW,GAAG,IAApC,CATmB,CAWnB;;AAEAF,MAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCJ,MAAlC;AACD,KAdD;;AAgBA,QAAIK,UAAU,GAAG,CAAjB;AACA,QAAIC,gBAAJ;;AAEA,UAAMC,MAAM,GAAG,MAAM;AACnBF,MAAAA,UAAU;AACVhB,MAAAA,IAAI,CAACI,GAAD,EAAMY,UAAN,EAAkBV,UAAlB,EAA8BG,WAA9B,CAAJ;AACAQ,MAAAA,gBAAgB,GAAGV,MAAM,CAACY,qBAAP,CAA6BD,MAA7B,CAAnB;AACD,KAJD;;AAKAA,IAAAA,MAAM;AACNP,IAAAA,MAAM;AAEN,WAAO,MAAM;AACXJ,MAAAA,MAAM,CAACa,oBAAP,CAA4BH,gBAA5B;AACAV,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCV,MAArC;AACD,KAHD;AAID,GArCQ,EAqCN,CAACX,IAAD,CArCM,CAAT;AAuCA,SAAOC,SAAP;AACD,CA3CD;;GAAMF,S;;AA6CN,eAAeA,SAAf","sourcesContent":["import { useRef, useEffect } from 'react';\n\nconst useCanvas = draw => {\n  const canvasRef = useRef(null);\n  \n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let stageWidth = window.innerWidth;\n    let stageHeight = window.innerHeight;\n    \n    const resize = () => {\n      stageWidth = window.innerWidth;\n      stageHeight = window.innerHeight;\n      // const ratio = window.devicePixelRatio;\n\n      // canvas.width = stageWidth * ratio;\n      // canvas.height = stageHeight * ratio;\n\n      canvas.style.width = stageWidth + 'px';\n      canvas.style.height = stageHeight + 'px';\n\n      // ctx.scale(ratio, ratio);\n      \n      window.addEventListener('resize', resize);\n    }\n\n    let frameCount = 0;\n    let animationFrameId;\n\n    const render = () => {\n      frameCount++;\n      draw(ctx, frameCount, stageWidth, stageHeight);\n      animationFrameId = window.requestAnimationFrame(render);\n    }\n    render();\n    resize();\n    \n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n      window.removeEventListener('resize', resize);\n    }\n  }, [draw]);\n  \n  return canvasRef\n}\n\nexport default useCanvas;"]},"metadata":{},"sourceType":"module"}