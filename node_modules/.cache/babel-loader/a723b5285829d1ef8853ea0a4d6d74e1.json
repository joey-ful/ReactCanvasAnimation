{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/src/components/SolarSystem.js\";\nimport React from 'react';\nimport { planetInfo } from '../consts/PlanetInfo.js';\nimport Canvas from './Canvas.js';\nimport Planet from '../js/Planet.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SolarSystem() {\n  let planets = [];\n  let sun;\n  let earth;\n\n  for (let planet of planetInfo) {\n    if (planet.name === 'sun') {\n      let sunStar = {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2\n      };\n      sun = new Planet(planet.name, sunStar, planet.radius, planet.color, planet.velocity, planet.orbitRadius);\n      planets.push(sun);\n    } else if (planet.name === 'earth') {\n      earth = new Planet(planet.name, sun, planet.radius, planet.color, planet.velocity, planet.orbitRadius);\n      planets.push(earth);\n    } else {\n      if (planet.star === 'sun') {\n        planets.push(new Planet(planet.name, sun, planet.radius, planet.color, planet.velocity, planet.orbitRadius));\n      } else {\n        planets.push(new Planet(planet.name, earth, planet.radius, planet.color, planet.velocity, planet.orbitRadius));\n      }\n    }\n  }\n\n  const draw = (ctx, canvas, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageWidth, stageHeight);\n\n    for (let planet of planets) {\n      planet.update(ctx, canvas);\n    }\n  };\n\n  const drawShadow = (shadowctx, canvas, stageWidth, stageHeight) => {\n    shadowctx.clearRect(0, 0, stageWidth, stageHeight);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      draw: draw,\n      id: \"main\",\n      type: \"dynamic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      id: \"shadow\",\n      draw: drawShadow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c = SolarSystem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SolarSystem\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/src/components/SolarSystem.js"],"names":["React","planetInfo","Canvas","Planet","SolarSystem","planets","sun","earth","planet","name","sunStar","x","window","innerWidth","y","innerHeight","radius","color","velocity","orbitRadius","push","star","draw","ctx","canvas","stageWidth","stageHeight","clearRect","update","drawShadow","shadowctx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { planetInfo } from '../consts/PlanetInfo.js';\nimport Canvas from './Canvas.js';\nimport Planet from '../js/Planet.js';\n\nexport default function SolarSystem() {\n  let planets = [];\n  let sun;\n  let earth;\n\n  for (let planet of planetInfo) {\n    if (planet.name === 'sun') {\n      let sunStar = {\n        x: window.innerWidth/2,\n        y: window.innerHeight/2,\n      }\n      sun = new Planet(planet.name, sunStar, planet.radius, planet.color, planet.velocity, planet.orbitRadius);\n      planets.push(sun);\n    } else if (planet.name === 'earth') {\n      earth = new Planet(planet.name, sun, planet.radius, planet.color, planet.velocity, planet.orbitRadius);\n      planets.push(earth);\n    } else {\n      if (planet.star === 'sun') {\n        planets.push(new Planet(planet.name, sun, planet.radius, planet.color, planet.velocity, planet.orbitRadius));\n      } else {\n        planets.push(new Planet(planet.name, earth, planet.radius, planet.color, planet.velocity, planet.orbitRadius));\n      }\n    }\n  }\n\n  const draw = (ctx, canvas, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageWidth, stageHeight);\n    \n    for (let planet of planets) {\n      planet.update(ctx, canvas);\n    }\n  }\n\n  const drawShadow = (shadowctx, canvas, stageWidth, stageHeight) => {\n    shadowctx.clearRect(0, 0, stageWidth, stageHeight);\n  }\n\n  return (\n    <>\n    <Canvas \n      draw={draw} \n      id='main' \n      type='dynamic'\n    />\n    <Canvas id='shadow' draw={drawShadow} />\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}