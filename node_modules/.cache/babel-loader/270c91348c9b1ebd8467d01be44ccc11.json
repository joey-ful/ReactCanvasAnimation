{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react'; // import useResize from '../ResizeCanvas.js';\n\nconst useCanvas = draw => {\n  _s();\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId;\n    const stageWidth = window.innerWidth;\n    const stageHeight = window.innerHeight;\n\n    const resize = () => {\n      const ratio = window.devicePixelRatio;\n      canvas.width = stageWidth * ratio;\n      canvas.height = stageHeight * ratio;\n      canvas.style.width = stageWidth + 'px';\n      canvas.style.height = stageHeight + 'px';\n      ctx.scale(ratio, ratio);\n      window.addEventListener('resize', resize);\n    };\n\n    const render = () => {\n      frameCount++; // ResizeCanvas(canvas, ctx);\n\n      draw(ctx, frameCount, stageWidth, stageHeight);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    resize();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n      window.removeEventListener('resize', resize);\n    };\n  }, [draw]);\n  return canvasRef;\n};\n\n_s(useCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\nexport default useCanvas;","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Hooks/useCanvas.js"],"names":["useRef","useEffect","useCanvas","draw","canvasRef","canvas","current","ctx","getContext","frameCount","animationFrameId","stageWidth","window","innerWidth","stageHeight","innerHeight","resize","ratio","devicePixelRatio","width","height","style","scale","addEventListener","render","requestAnimationFrame","cancelAnimationFrame","removeEventListener"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC,C,CACA;;AAEA,MAAMC,SAAS,GAAGC,IAAI,IAAI;AAAA;;AACxB,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,gBAAJ;AACA,UAAMC,UAAU,GAAGC,MAAM,CAACC,UAA1B;AACA,UAAMC,WAAW,GAAGF,MAAM,CAACG,WAA3B;;AAEA,UAAMC,MAAM,GAAG,MAAM;AACnB,YAAMC,KAAK,GAAGL,MAAM,CAACM,gBAArB;AAEAb,MAAAA,MAAM,CAACc,KAAP,GAAeR,UAAU,GAAGM,KAA5B;AACAZ,MAAAA,MAAM,CAACe,MAAP,GAAgBN,WAAW,GAAGG,KAA9B;AAEAZ,MAAAA,MAAM,CAACgB,KAAP,CAAaF,KAAb,GAAqBR,UAAU,GAAG,IAAlC;AACAN,MAAAA,MAAM,CAACgB,KAAP,CAAaD,MAAb,GAAsBN,WAAW,GAAG,IAApC;AAEAP,MAAAA,GAAG,CAACe,KAAJ,CAAUL,KAAV,EAAiBA,KAAjB;AAEAL,MAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCP,MAAlC;AACD,KAZD;;AAcA,UAAMQ,MAAM,GAAG,MAAM;AACnBf,MAAAA,UAAU,GADS,CAEnB;;AACAN,MAAAA,IAAI,CAACI,GAAD,EAAME,UAAN,EAAkBE,UAAlB,EAA8BG,WAA9B,CAAJ;AACAJ,MAAAA,gBAAgB,GAAGE,MAAM,CAACa,qBAAP,CAA6BD,MAA7B,CAAnB;AACD,KALD;;AAMAA,IAAAA,MAAM;AACNR,IAAAA,MAAM;AAEN,WAAO,MAAM;AACXJ,MAAAA,MAAM,CAACc,oBAAP,CAA4BhB,gBAA5B;AACAE,MAAAA,MAAM,CAACe,mBAAP,CAA2B,QAA3B,EAAqCX,MAArC;AACD,KAHD;AAID,GAnCQ,EAmCN,CAACb,IAAD,CAnCM,CAAT;AAqCA,SAAOC,SAAP;AACD,CAzCD;;GAAMF,S;;AA2CN,eAAeA,SAAf","sourcesContent":["import { useRef, useEffect } from 'react';\n// import useResize from '../ResizeCanvas.js';\n\nconst useCanvas = draw => {\n  const canvasRef = useRef(null);\n  \n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId;\n    const stageWidth = window.innerWidth;\n    const stageHeight = window.innerHeight;\n    \n    const resize = () => {\n      const ratio = window.devicePixelRatio;\n\n      canvas.width = stageWidth * ratio;\n      canvas.height = stageHeight * ratio;\n\n      canvas.style.width = stageWidth + 'px';\n      canvas.style.height = stageHeight + 'px';\n\n      ctx.scale(ratio, ratio);\n      \n      window.addEventListener('resize', resize);\n    }\n\n    const render = () => {\n      frameCount++;\n      // ResizeCanvas(canvas, ctx);\n      draw(ctx, frameCount, stageWidth, stageHeight);\n      animationFrameId = window.requestAnimationFrame(render);\n    }\n    render();\n    resize();\n    \n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n      window.removeEventListener('resize', resize);\n    }\n  }, [draw]);\n  \n  return canvasRef\n}\n\nexport default useCanvas;"]},"metadata":{},"sourceType":"module"}