{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/SolarSystem.js\";\nimport React from 'react'; // import Planet from './Planet.js';\n\nimport { usePlanetState, usePlanetDispatch } from './PlanetContext.js';\nimport Canvas from './Canvas.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SolarSystem() {\n  const draw = (ctx, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageHeight, stageHeight);\n\n    for (let planet of planets) {\n      draw(ctx, planet.radius, planet.color, planet.x, planet.y);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    draw: draw,\n    id: \"main\",\n    type: \"dynamic\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = SolarSystem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SolarSystem\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/SolarSystem.js"],"names":["React","usePlanetState","usePlanetDispatch","Canvas","SolarSystem","draw","ctx","stageWidth","stageHeight","clearRect","planet","planets","radius","color","x","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,oBAAlD;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAGpC,QAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,UAAN,EAAkBC,WAAlB,KAAkC;AAC7CF,IAAAA,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBD,WAApB,EAAiCA,WAAjC;;AAEA,SAAK,IAAIE,MAAT,IAAmBC,OAAnB,EAA4B;AAC1BN,MAAAA,IAAI,CAACC,GAAD,EAAMI,MAAM,CAACE,MAAb,EAAqBF,MAAM,CAACG,KAA5B,EAAmCH,MAAM,CAACI,CAA1C,EAA6CJ,MAAM,CAACK,CAApD,CAAJ;AACD;AACF,GAND;;AASA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEV,IADR;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;KAnBuBD,W","sourcesContent":["import React from 'react';\n// import Planet from './Planet.js';\nimport { usePlanetState, usePlanetDispatch } from './PlanetContext.js';\nimport Canvas from './Canvas.js';\n\nexport default function SolarSystem() {\n  \n\n  const draw = (ctx, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageHeight, stageHeight);\n\n    for (let planet of planets) {\n      draw(ctx, planet.radius, planet.color, planet.x, planet.y);\n    }\n  }\n\n\n  return (\n    <Canvas \n      draw={draw} \n      id='main' \n      type='dynamic'\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}