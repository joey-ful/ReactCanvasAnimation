{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Background.js\";\nimport React from 'react';\nimport Canvas from './Canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Background = () => {\n  const draw = (ctx, frameCount, stageWidth, stageHeight) => {\n    ctx.fillStyle = createGradient(ctx, stageWidth, stageHeight);\n    ctx.fillRect(0, 0, stageWidth, stageHeight);\n    fillStarts();\n  };\n\n  const fillStars = (ctx, n) => {\n    for (let i = 0; i < this.starNumber; i++) {\n      let radius = Math.random() * 1 + 0.1;\n      let x = radius + Math.random() * (this.stageWidth - radius * 2);\n      let y = radius + Math.random() * (this.stageHeight - radius * 2);\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, Math.PI * 2);\n      ctx.fillStyle = 'white';\n      ctx.shadowColor = 'white';\n      ctx.shadowBlur = 30;\n      ctx.fill();\n      ctx.closePath();\n    }\n  };\n\n  const createGradient = (ctx, stageWidth, stageHeight) => {\n    let gradient = ctx.createRadialGradient(stageWidth / 2, stageHeight / 2, stageWidth / 3, stageWidth / 2, stageHeight / 2, stageWidth / 1.5);\n    gradient.addColorStop(0, '#214568');\n    gradient.addColorStop(1, '#162133');\n    return gradient;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    draw: draw\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Background;\nexport default Background;\n\nvar _c;\n\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Background.js"],"names":["React","Canvas","Background","draw","ctx","frameCount","stageWidth","stageHeight","fillStyle","createGradient","fillRect","fillStarts","fillStars","n","i","starNumber","radius","Math","random","x","y","beginPath","arc","PI","shadowColor","shadowBlur","fill","closePath","gradient","createRadialGradient","addColorStop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,UAAN,EAAkBC,UAAlB,EAA8BC,WAA9B,KAA8C;AACzDH,IAAAA,GAAG,CAACI,SAAJ,GAAgBC,cAAc,CAACL,GAAD,EAAME,UAAN,EAAkBC,WAAlB,CAA9B;AACAH,IAAAA,GAAG,CAACM,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBJ,UAAnB,EAA+BC,WAA/B;AACAI,IAAAA,UAAU;AACX,GAJD;;AAMA,QAAMC,SAAS,GAAG,CAACR,GAAD,EAAMS,CAAN,KAAY;AAC5B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,UAAzB,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,UAAIE,MAAM,GAAGC,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,GAAjC;AACA,UAAIC,CAAC,GAAGH,MAAM,GAAGC,IAAI,CAACC,MAAL,MAAiB,KAAKZ,UAAL,GAAkBU,MAAM,GAAG,CAA5C,CAAjB;AACA,UAAII,CAAC,GAAGJ,MAAM,GAAGC,IAAI,CAACC,MAAL,MAAiB,KAAKX,WAAL,GAAmBS,MAAM,GAAG,CAA7C,CAAjB;AAEAZ,MAAAA,GAAG,CAACiB,SAAJ;AACAjB,MAAAA,GAAG,CAACkB,GAAJ,CAAQH,CAAR,EAAWC,CAAX,EAAcJ,MAAd,EAAsB,CAAtB,EAAyBC,IAAI,CAACM,EAAL,GAAU,CAAnC;AACAnB,MAAAA,GAAG,CAACI,SAAJ,GAAgB,OAAhB;AACAJ,MAAAA,GAAG,CAACoB,WAAJ,GAAkB,OAAlB;AACApB,MAAAA,GAAG,CAACqB,UAAJ,GAAiB,EAAjB;AACArB,MAAAA,GAAG,CAACsB,IAAJ;AACAtB,MAAAA,GAAG,CAACuB,SAAJ;AACD;AACF,GAdD;;AAiBA,QAAMlB,cAAc,GAAG,CAACL,GAAD,EAAME,UAAN,EAAkBC,WAAlB,KAAkC;AACvD,QAAIqB,QAAQ,GAAGxB,GAAG,CAACyB,oBAAJ,CACbvB,UAAU,GAAG,CADA,EAEbC,WAAW,GAAG,CAFD,EAGbD,UAAU,GAAG,CAHA,EAIbA,UAAU,GAAG,CAJA,EAKbC,WAAW,GAAG,CALD,EAMbD,UAAU,GAAG,GANA,CAAf;AASAsB,IAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,SAAzB;AACAF,IAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,SAAzB;AAEA,WAAOF,QAAP;AACD,GAdD;;AAgBA,sBAAO,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEzB;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzCD;;KAAMD,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport Canvas from './Canvas';\n\nconst Background = () => {\n  const draw = (ctx, frameCount, stageWidth, stageHeight) => {\n    ctx.fillStyle = createGradient(ctx, stageWidth, stageHeight);\n    ctx.fillRect(0, 0, stageWidth, stageHeight);\n    fillStarts()\n  }\n\n  const fillStars = (ctx, n) => {\n    for (let i = 0; i < this.starNumber; i++) {\n      let radius = Math.random() * 1 + 0.1;\n      let x = radius + Math.random() * (this.stageWidth - radius * 2);\n      let y = radius + Math.random() * (this.stageHeight - radius * 2);\n\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, Math.PI * 2);\n      ctx.fillStyle = 'white';\n      ctx.shadowColor = 'white';\n      ctx.shadowBlur = 30;\n      ctx.fill();\n      ctx.closePath();\n    }\n  }\n\n\n  const createGradient = (ctx, stageWidth, stageHeight) => {\n    let gradient = ctx.createRadialGradient(\n      stageWidth / 2,\n      stageHeight / 2,\n      stageWidth / 3,\n      stageWidth / 2,\n      stageHeight / 2,\n      stageWidth / 1.5\n    );\n\n    gradient.addColorStop(0, '#214568');\n    gradient.addColorStop(1, '#162133');\n\n    return gradient;\n  }\n\n  return <Canvas draw={draw} />\n}\n\nexport default Background;"]},"metadata":{},"sourceType":"module"}