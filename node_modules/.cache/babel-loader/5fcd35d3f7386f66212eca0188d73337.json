{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/ReactCanvasAnimation/src/components/Ball.js\";\nimport React from 'react';\nimport Canvas from './Canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Ball = () => {\n  const draw = (ctx, frameCount, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageWidth, stageHeight);\n    ctx.beginPath();\n    ctx.arc(200, 200, 50 * Math.sin(frameCount * 0.05) ** 2, 0, Math.PI * 2);\n    ctx.fillStyle = 'red';\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  function drawHeart(ctx, fromx, fromy, lw, hlen, color) {\n    var x = fromx;\n    var y = fromy;\n    var width = lw;\n    var height = hlen;\n    ctx.save();\n    ctx.beginPath();\n    var topCurveHeight = height * 0.3;\n    ctx.moveTo(x, y + topCurveHeight); // top left curve\n\n    ctx.bezierCurveTo(x, y, x - width / 2, y, x - width / 2, y + topCurveHeight); // bottom left curve\n\n    ctx.bezierCurveTo(x - width / 2, y + (height + topCurveHeight) / 2, x, y + (height + topCurveHeight) / 2, x, y + height); // bottom right curve\n\n    ctx.bezierCurveTo(x, y + (height + topCurveHeight) / 2, x + width / 2, y + (height + topCurveHeight) / 2, x + width / 2, y + topCurveHeight); // top right curve\n\n    ctx.bezierCurveTo(x + width / 2, y, x, y, x, y + topCurveHeight);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    draw: draw\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Ball;\nexport default Ball;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ball\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/ReactCanvasAnimation/src/components/Ball.js"],"names":["React","Canvas","Ball","draw","ctx","frameCount","stageWidth","stageHeight","clearRect","beginPath","arc","Math","sin","PI","fillStyle","fill","closePath","drawHeart","fromx","fromy","lw","hlen","color","x","y","width","height","save","topCurveHeight","moveTo","bezierCurveTo","restore"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,UAAN,EAAkBC,UAAlB,EAA8BC,WAA9B,KAA8C;AACzDH,IAAAA,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBF,UAApB,EAAgCC,WAAhC;AACAH,IAAAA,GAAG,CAACK,SAAJ;AACAL,IAAAA,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAa,GAAb,EAAkB,KAAGC,IAAI,CAACC,GAAL,CAASP,UAAU,GAAG,IAAtB,KAA6B,CAAlD,EAAqD,CAArD,EAAwDM,IAAI,CAACE,EAAL,GAAU,CAAlE;AACAT,IAAAA,GAAG,CAACU,SAAJ,GAAgB,KAAhB;AACAV,IAAAA,GAAG,CAACW,IAAJ;AACAX,IAAAA,GAAG,CAACY,SAAJ;AACD,GAPD;;AASA,WAASC,SAAT,CAAmBb,GAAnB,EAAwBc,KAAxB,EAA+BC,KAA/B,EAAqCC,EAArC,EAAwCC,IAAxC,EAA6CC,KAA7C,EAAoD;AAElD,QAAIC,CAAC,GAAGL,KAAR;AACA,QAAIM,CAAC,GAAGL,KAAR;AACA,QAAIM,KAAK,GAAGL,EAAZ;AACA,QAAIM,MAAM,GAAGL,IAAb;AAEAjB,IAAAA,GAAG,CAACuB,IAAJ;AACAvB,IAAAA,GAAG,CAACK,SAAJ;AACA,QAAImB,cAAc,GAAGF,MAAM,GAAG,GAA9B;AACAtB,IAAAA,GAAG,CAACyB,MAAJ,CAAWN,CAAX,EAAcC,CAAC,GAAGI,cAAlB,EAVkD,CAWlD;;AACAxB,IAAAA,GAAG,CAAC0B,aAAJ,CACEP,CADF,EACKC,CADL,EAEED,CAAC,GAAGE,KAAK,GAAG,CAFd,EAEiBD,CAFjB,EAGED,CAAC,GAAGE,KAAK,GAAG,CAHd,EAGiBD,CAAC,GAAGI,cAHrB,EAZkD,CAkBlD;;AACAxB,IAAAA,GAAG,CAAC0B,aAAJ,CACEP,CAAC,GAAGE,KAAK,GAAG,CADd,EACiBD,CAAC,GAAG,CAACE,MAAM,GAAGE,cAAV,IAA4B,CADjD,EAEEL,CAFF,EAEKC,CAAC,GAAG,CAACE,MAAM,GAAGE,cAAV,IAA4B,CAFrC,EAGEL,CAHF,EAGKC,CAAC,GAAGE,MAHT,EAnBkD,CAyBlD;;AACAtB,IAAAA,GAAG,CAAC0B,aAAJ,CACEP,CADF,EACKC,CAAC,GAAG,CAACE,MAAM,GAAGE,cAAV,IAA4B,CADrC,EAEEL,CAAC,GAAGE,KAAK,GAAG,CAFd,EAEiBD,CAAC,GAAG,CAACE,MAAM,GAAGE,cAAV,IAA4B,CAFjD,EAGEL,CAAC,GAAGE,KAAK,GAAG,CAHd,EAGiBD,CAAC,GAAGI,cAHrB,EA1BkD,CAgClD;;AACAxB,IAAAA,GAAG,CAAC0B,aAAJ,CACEP,CAAC,GAAGE,KAAK,GAAG,CADd,EACiBD,CADjB,EAEED,CAFF,EAEKC,CAFL,EAGED,CAHF,EAGKC,CAAC,GAAGI,cAHT;AAMAxB,IAAAA,GAAG,CAACY,SAAJ;AACAZ,IAAAA,GAAG,CAACU,SAAJ,GAAgBQ,KAAhB;AACAlB,IAAAA,GAAG,CAACW,IAAJ;AACAX,IAAAA,GAAG,CAAC2B,OAAJ;AAED;;AAED,sBAAO,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAE5B;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzDD;;KAAMD,I;AA2DN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport Canvas from './Canvas';\n\nconst Ball = () => {\n  const draw = (ctx, frameCount, stageWidth, stageHeight) => {\n    ctx.clearRect(0, 0, stageWidth, stageHeight);\n    ctx.beginPath();\n    ctx.arc(200, 200, 50*Math.sin(frameCount * 0.05)**2, 0, Math.PI * 2);\n    ctx.fillStyle = 'red';\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  function drawHeart(ctx, fromx, fromy,lw,hlen,color) {\n\n    var x = fromx;\n    var y = fromy;\n    var width = lw ;\n    var height = hlen;\n  \n    ctx.save();\n    ctx.beginPath();\n    var topCurveHeight = height * 0.3;\n    ctx.moveTo(x, y + topCurveHeight);\n    // top left curve\n    ctx.bezierCurveTo(\n      x, y, \n      x - width / 2, y, \n      x - width / 2, y + topCurveHeight\n    );\n  \n    // bottom left curve\n    ctx.bezierCurveTo(\n      x - width / 2, y + (height + topCurveHeight) / 2, \n      x, y + (height + topCurveHeight) / 2, \n      x, y + height\n    );\n  \n    // bottom right curve\n    ctx.bezierCurveTo(\n      x, y + (height + topCurveHeight) / 2, \n      x + width / 2, y + (height + topCurveHeight) / 2, \n      x + width / 2, y + topCurveHeight\n    );\n  \n    // top right curve\n    ctx.bezierCurveTo(\n      x + width / 2, y, \n      x, y, \n      x, y + topCurveHeight\n    );\n  \n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.restore();\n  \n  }\n\n  return <Canvas draw={draw} />\n}\n\nexport default Ball;"]},"metadata":{},"sourceType":"module"}