{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport useResize from '../ResizeCanvas.js';\n\nconst useCanvas = draw => {\n  _s();\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId;\n\n    const resize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      window.addEventListener('resize', resizeCanvas);\n    };\n\n    const render = () => {\n      frameCount++; // ResizeCanvas(canvas, ctx);\n\n      draw(ctx, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    resizeCanvas();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n      window.removeEventListener('resize', resize);\n    };\n  }, [draw]);\n  return canvasRef;\n};\n\n_s(useCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\nexport default useCanvas;","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/Hooks/useCanvas.js"],"names":["useRef","useEffect","useResize","useCanvas","draw","canvasRef","canvas","current","ctx","getContext","frameCount","animationFrameId","resize","width","window","innerWidth","height","innerHeight","addEventListener","resizeCanvas","render","requestAnimationFrame","cancelAnimationFrame","removeEventListener"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,SAAS,GAAGC,IAAI,IAAI;AAAA;;AACxB,QAAMC,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,gBAAJ;;AAEA,UAAMC,MAAM,GAAG,MAAM;AACnBN,MAAAA,MAAM,CAACO,KAAP,GAAeC,MAAM,CAACC,UAAtB;AACAT,MAAAA,MAAM,CAACU,MAAP,GAAgBF,MAAM,CAACG,WAAvB;AAGAH,MAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AAGD,KARD;;AAUA,UAAMC,MAAM,GAAG,MAAM;AACnBV,MAAAA,UAAU,GADS,CAEnB;;AAKAN,MAAAA,IAAI,CAACI,GAAD,EAAME,UAAN,CAAJ;AACAC,MAAAA,gBAAgB,GAAGG,MAAM,CAACO,qBAAP,CAA6BD,MAA7B,CAAnB;AACD,KATD;;AAUAA,IAAAA,MAAM;AACND,IAAAA,YAAY;AAEZ,WAAO,MAAM;AACXL,MAAAA,MAAM,CAACQ,oBAAP,CAA4BX,gBAA5B;AACAG,MAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCX,MAArC;AACD,KAHD;AAID,GAjCQ,EAiCN,CAACR,IAAD,CAjCM,CAAT;AAmCA,SAAOC,SAAP;AACD,CAvCD;;GAAMF,S;;AAyCN,eAAeA,SAAf","sourcesContent":["import { useRef, useEffect } from 'react';\nimport useResize from '../ResizeCanvas.js';\n\nconst useCanvas = draw => {\n  const canvasRef = useRef(null);\n  \n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId;\n    \n    const resize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      \n      \n      window.addEventListener('resize', resizeCanvas);\n  \n      \n    }\n\n    const render = () => {\n      frameCount++;\n      // ResizeCanvas(canvas, ctx);\n      \n      \n      \n\n      draw(ctx, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    }\n    render();\n    resizeCanvas();\n    \n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n      window.removeEventListener('resize', resize);\n    }\n  }, [draw]);\n  \n  return canvasRef\n}\n\nexport default useCanvas;"]},"metadata":{},"sourceType":"module"}