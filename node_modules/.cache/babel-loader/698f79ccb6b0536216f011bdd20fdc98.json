{"ast":null,"code":"const Planet = props => {\n  const {\n    name,\n    star,\n    radius,\n    color,\n    velocity,\n    orbitRadius\n  } = props;\n  let theta = Math.random() * Math.PI * 2;\n  let x, y;\n\n  const update = ctx => {\n    this.theta += this.velocity;\n    x = star.x + orbitRadius * Math.cos(theta);\n    y = star.y + orbitRadius * Math.sin(theta);\n    draw(ctx);\n  };\n\n  const draw = ctx => {\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.closePath();\n  };\n};\n\n_c = Planet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planet\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/SolarSystem.js"],"names":["Planet","props","name","star","radius","color","velocity","orbitRadius","theta","Math","random","PI","x","y","update","ctx","cos","sin","draw","beginPath","arc","fillStyle","fill","closePath"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA,QAA5B;AAAsCC,IAAAA;AAAtC,MAAqDN,KAA3D;AACA,MAAIO,KAAK,GAAGC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,EAArB,GAA0B,CAAtC;AACA,MAAIC,CAAJ,EAAOC,CAAP;;AAEA,QAAMC,MAAM,GAAGC,GAAG,IAAI;AACpB,SAAKP,KAAL,IAAc,KAAKF,QAAnB;AAEAM,IAAAA,CAAC,GAAGT,IAAI,CAACS,CAAL,GAASL,WAAW,GAAGE,IAAI,CAACO,GAAL,CAASR,KAAT,CAA3B;AACAK,IAAAA,CAAC,GAAGV,IAAI,CAACU,CAAL,GAASN,WAAW,GAAGE,IAAI,CAACQ,GAAL,CAAST,KAAT,CAA3B;AAEAU,IAAAA,IAAI,CAACH,GAAD,CAAJ;AACD,GAPD;;AASA,QAAMG,IAAI,GAAGH,GAAG,IAAI;AAClBA,IAAAA,GAAG,CAACI,SAAJ;AACAJ,IAAAA,GAAG,CAACK,GAAJ,CAAQR,CAAR,EAAWC,CAAX,EAAcT,MAAd,EAAsB,CAAtB,EAAyBK,IAAI,CAACE,EAAL,GAAU,CAAnC,EAAsC,KAAtC;AACAI,IAAAA,GAAG,CAACM,SAAJ,GAAgBhB,KAAhB;AACAU,IAAAA,GAAG,CAACO,IAAJ;AACAP,IAAAA,GAAG,CAACQ,SAAJ;AACD,GAND;AAOD,CArBD;;KAAMvB,M","sourcesContent":["const Planet = props => {\n  const {name, star, radius, color, velocity, orbitRadius} = props;\n  let theta = Math.random() * Math.PI * 2;\n  let x, y;\n\n  const update = ctx => {\n    this.theta += this.velocity;\n\n    x = star.x + orbitRadius * Math.cos(theta);\n    y = star.y + orbitRadius * Math.sin(theta);\n\n    draw(ctx);\n  }\n\n  const draw = ctx => {\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.closePath();\n  }\n}"]},"metadata":{},"sourceType":"module"}