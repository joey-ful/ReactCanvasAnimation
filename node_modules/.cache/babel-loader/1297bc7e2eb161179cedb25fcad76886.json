{"ast":null,"code":"var _jsxFileName = \"/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/contexts/RadioContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useContext, createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialRadio = [{\n  id: 1,\n  type: 'dragTypes',\n  options: [{\n    id: 1,\n    name: 'no-drag',\n    checked: true\n  }, {\n    id: 2,\n    name: 'basic-drag',\n    checked: false\n  }, {\n    id: 3,\n    name: 'elastic-drag',\n    checked: false\n  }]\n}, {\n  id: 2,\n  type: 'shadowTypes',\n  options: [{\n    id: 1,\n    name: 'no-shadow',\n    checked: true\n  }, {\n    id: 2,\n    name: 'rectangular-shadow',\n    checked: false\n  }, {\n    id: 3,\n    name: 'round-shadow',\n    checked: false\n  }]\n}];\n\nfunction radioReducer(state, action) {\n  switch (action.type) {\n    case 'CLICK':\n      return state.map(radio => radio.type === action.radioType ? { ...radio,\n        options: radio.options.map(option => option.id === action.id ? { ...option,\n          checked: true\n        } : { ...option,\n          checked: false\n        })\n      } : radio);\n      console.log();\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst RadioStateContext = /*#__PURE__*/createContext();\nconst RadioDispatchContext = /*#__PURE__*/createContext();\nexport function RadioProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(radioReducer, initialRadio);\n  return /*#__PURE__*/_jsxDEV(RadioStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(RadioDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RadioProvider, \"JQ5PDu3Q3hDgSyy0iMQdIp/2qZk=\");\n\n_c = RadioProvider;\nexport function useRadioState() {\n  _s2();\n\n  const context = useContext(RadioStateContext);\n\n  if (!context) {\n    throw new Error('Cannot find RadioProvider');\n  }\n\n  return context;\n}\n\n_s2(useRadioState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useRadioDispatch() {\n  _s3();\n\n  const context = useContext(RadioDispatchContext);\n\n  if (!context) {\n    throw new Error('Cannot find RadioProvider');\n  }\n\n  return context;\n}\n\n_s3(useRadioDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioProvider\");","map":{"version":3,"sources":["/Users/jehong/Programming/Portfolio/CanvasAnimationReact/react-canvas-animation/src/contexts/RadioContext.js"],"names":["useContext","createContext","useReducer","initialRadio","id","type","options","name","checked","radioReducer","state","action","map","radio","radioType","option","console","log","Error","RadioStateContext","RadioDispatchContext","RadioProvider","children","dispatch","useRadioState","context","useRadioDispatch"],"mappings":"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","sourcesContent":["import {useContext, createContext, useReducer} from 'react';\n\nconst initialRadio = [\n  {\n    id: 1,\n    type: 'dragTypes',\n    options: [\n      {\n        id: 1,\n        name: 'no-drag',\n        checked: true,\n      },\n      {\n        id: 2,\n        name: 'basic-drag',\n        checked: false,\n      },\n      {\n        id: 3,\n        name: 'elastic-drag',\n        checked: false,\n      },\n    ],\n  },\n  {\n    id: 2,\n    type: 'shadowTypes',\n    options: [\n      {\n        id: 1,\n        name: 'no-shadow',\n        checked: true,\n      },\n      {\n        id: 2,\n        name: 'rectangular-shadow',\n        checked: false,\n      },\n      {\n        id: 3,\n        name: 'round-shadow',\n        checked: false,\n      },\n    ],\n  },\n];\n\nfunction radioReducer(state, action) {\n  switch (action.type) {\n    case 'CLICK':\n      return state.map((radio) =>\n      radio.type === action.radioType\n      ? {\n          ...radio,\n          options: \n            radio.options.map((option) =>\n              option.id === action.id\n                ? {...option, checked: true}\n                : {...option, checked: false}\n            ),\n        }\n      : radio)\n      console.log()\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst RadioStateContext = createContext();\nconst RadioDispatchContext = createContext();\n\nexport function RadioProvider({children}) {\n  const [state, dispatch] = useReducer(radioReducer, initialRadio);\n\n  return (\n    <RadioStateContext.Provider value={state}>\n      <RadioDispatchContext.Provider value={dispatch}>\n        {children}\n      </RadioDispatchContext.Provider>\n    </RadioStateContext.Provider>\n  );\n}\n\nexport function useRadioState() {\n  const context = useContext(RadioStateContext);\n  if (!context) {\n    throw new Error('Cannot find RadioProvider');\n  }\n  return context;\n}\n\nexport function useRadioDispatch() {\n  const context = useContext(RadioDispatchContext);\n  if (!context) {\n    throw new Error('Cannot find RadioProvider');\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}